<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Carnegie Mellon University on The Conscientious Programmer</title>
    <link>http://ConscientiousProgrammer.com/categories/carnegie-mellon-university/</link>
    <description>Recent content in Carnegie Mellon University on The Conscientious Programmer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 02 Aug 2013 22:17:42 -0400</lastBuildDate>
    <atom:link href="http://ConscientiousProgrammer.com/categories/carnegie-mellon-university/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Pittsburgh Ruby/Python social and some observations about our polyglot world</title>
      <link>http://conscientiousprogrammer.com/blog/2013/08/02/pittsburgh-ruby-python-social</link>
      <pubDate>Fri, 02 Aug 2013 22:17:42 -0400</pubDate>
      
      <guid>http://conscientiousprogrammer.com/blog/2013/08/02/pittsburgh-ruby-python-social</guid>
      <description>

&lt;p&gt;Programming meetups aren&amp;rsquo;t just about presentations and coding. Abby and I joined others in meeting up for dinner for a &lt;a href=&#34;http://www.meetup.com/pittsburgh-ruby/events/120201652/&#34;&gt;joint Pittsburgh Ruby and Pittsburgh Python social&lt;/a&gt; and enjoyed relaxing and socializing outdoors in Bakery Square. Although it perpetually looked like it was going to rain, it turned out we weren&amp;rsquo;t really rained on.&lt;/p&gt;

&lt;iframe src=&#34;//instagram.com/p/ch8quus4Kb/embed/&#34; width=&#34;612&#34; height=&#34;710&#34; frameborder=&#34;0&#34; scrolling=&#34;no&#34; allowtransparency=&#34;true&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;Carol, Andre, and Abby:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/carolnichols/9425969330&#34; title=&#34;ttm! by Carol Nichols, on Flickr&#34;&gt;&lt;img src=&#34;https://farm4.staticflickr.com/3754/9425969330_d8ecdbf987.jpg&#34; width=&#34;500&#34; height=&#34;281&#34; alt=&#34;ttm!&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It was fitting that there was a joint social for two language communities, because we live in a polyglot world.&lt;/p&gt;

&lt;p&gt;Despite my original intention not to engage into any tech-related conversation, I couldn&amp;rsquo;t help remarking on my current polyglot responsibilities at work at CMU on the METAL project!&lt;/p&gt;

&lt;h2 id=&#34;our-polyglot-world-ruby-python-perl:f96e1a748b79a0448958de0b51234d51&#34;&gt;Our polyglot world: Ruby, Python, Perl&lt;/h2&gt;

&lt;p&gt;I mentioned having to cobble together Ruby, Python, and Perl code recently in an NLP project to process Farsi text into corpora to analyze. We used a Ruby gem &lt;a href=&#34;https://github.com/aziz/virastar&#34;&gt;Virastar&lt;/a&gt; in our pipeline, a Perl script for a Farsi stemmer, &lt;a href=&#34;http://perstem.sourceforge.net/&#34;&gt;Perstem&lt;/a&gt;, and a &lt;a href=&#34;https://github.com/wfeely/farsiNLPTools&#34;&gt;Python script for normalization&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&#34;update-of-2013-12-04-c-scala-mongodb:f96e1a748b79a0448958de0b51234d51&#34;&gt;(Update of 2013-12-04) C++, Scala, MongoDB&lt;/h3&gt;

&lt;p&gt;The work project ended up becoming even more polyglot than I expected.&lt;/p&gt;

&lt;p&gt;I also used a C++ tagger, TurboTagger from &lt;a href=&#34;http://www.ark.cs.cmu.edu/TurboParser/&#34;&gt;TurboParser&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I wrote Scala to execute and monitor the pipeline, because it turned out that component bugs and timeouts (from infinite loops sometimes) had to be dealt with: the original shell script pipelines did not handle any of that at all. Also, the vast amount of data meant that parallelizing was critical. The Scala ecosystem has  turned out great for me. I didn&amp;rsquo;t use Akka actors for this task, just futures and parallel collections.&lt;/p&gt;

&lt;p&gt;I also used MongoDB because it is quite a natural fit for document-oriented storage and querying as an intermediate stage I can inspect before the final stage of conversion to Sketch Engine format. And I happened to just &lt;a href=&#34;http://ConscientiousProgrammer.com/blog/2013/12/04/mongodb-free-online-course-a-review/&#34;&gt;finish a free online MongoDB course&lt;/a&gt; which has been useful. In my Scala code, I used the official Scala driver &lt;a href=&#34;https://github.com/mongodb/casbah&#34;&gt;Casbah&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Why MongoDB? I needed to track the transformations, and experiment with different parameters while also fixing bugs and rerunning stuff. Because there is so much data and sometimes something crashes in the pipeline, I decided to save all intermediate results in a database in order to avoid repeating work.&lt;/p&gt;

&lt;p&gt;Finally, I used Scala to generate corpora for importing into &lt;a href=&#34;http://www.sketchengine.co.uk/&#34;&gt;The Sketch Engine&lt;/a&gt; for our Farsi linguistics experts to analyze. Scala&amp;rsquo;s parser combinator library came in very useful, and I represented each stage in the pipeline as a transformation of a custom AST designed to finally serialize well to the Sketch Engine &amp;ldquo;vert&amp;rdquo; file format.&lt;/p&gt;

&lt;p&gt;It was pretty important to work with ASTs, since we actually got text in a variety of formats, which I parsed to a common AST in order to push into the pipeline.&lt;/p&gt;

&lt;p&gt;Whew!&lt;/p&gt;

&lt;h3 id=&#34;update-of-2014-06-10:f96e1a748b79a0448958de0b51234d51&#34;&gt;(Update of 2014-06-10)&lt;/h3&gt;

&lt;p&gt;A description of some of this &lt;a href=&#34;http://springfield.metaphor.cs.cmu.edu:8080/MetaphorViz/About.html&#34;&gt;METAL project&lt;/a&gt; work is in the paper &lt;a href=&#34;http://www.lrec-conf.org/proceedings/lrec2014/pdf/596_Paper.pdf&#34;&gt;&amp;ldquo;The CMU METAL Farsi NLP Approach&amp;rdquo;&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Learning about Parasail: a new parallel programming language</title>
      <link>http://conscientiousprogrammer.com/blog/2012/10/17/learning-about-parasail-a-new-parallel-programming-language/</link>
      <pubDate>Wed, 17 Oct 2012 20:39:15 -0400</pubDate>
      
      <guid>http://conscientiousprogrammer.com/blog/2012/10/17/learning-about-parasail-a-new-parallel-programming-language/</guid>
      <description>

&lt;p&gt;I noticed an announcement for a talk to be given at CMU for the &lt;a href=&#34;http://www.isri.cmu.edu/&#34;&gt;ISR&lt;/a&gt; by visitor Tucker Taft, &lt;a href=&#34;http://www.cs.cmu.edu/afs/.cs.cmu.edu/Web/copetas/Posters/ISR-Taft12.pdf&#34;&gt;&amp;ldquo;ParaSail: A Pointer-Free Path to Object-Oriented Parallel Programming&amp;rdquo;&lt;/a&gt;, and decided to attend.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;d recognized &lt;a href=&#34;http://en.wikipedia.org/wiki/User:Optikos/S._Tucker_Taft&#34;&gt;Tucker Taft&lt;/a&gt;&amp;rsquo;s name because decades ago (and &lt;a href=&#34;http://www.adacore.com/company/about/executive-team/&#34;&gt;now still&lt;/a&gt;), he was a very prominent member of the &lt;a href=&#34;http://en.wikipedia.org/wiki/Ada_%28programming_language%29&#34;&gt;Ada programming language&lt;/a&gt; community, being one of the primary designers of the extensions to the original Ada 83. I never actually used Ada 95, but was following it a little bit because in 1995 I had to maintain some Ada 83 code at work, so I was curious where Ada was going. (I haven&amp;rsquo;t used Ada since leaving that job in 1997.)&lt;/p&gt;

&lt;p&gt;So I was curious what an Ada guy had in mind as for one of the next steps in programming language design (parallelism), and why a new language and how it would be informed by an Ada mindset.&lt;/p&gt;

&lt;h2 id=&#34;parasail-and-why-a-new-language-anyway:277903bcdd4917269c8c2ab8eefc7e73&#34;&gt;Parasail, and why a new language anyway?&lt;/h2&gt;

&lt;p&gt;The new language Taft has been working on is called Parasail and &lt;a href=&#34;http://parasail-programming-language.blogspot.com/&#34;&gt;its Web site is really a blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Why a new language, and not, say, libraries and idioms to bolt onto an existing language? Because to make parallelism &amp;ldquo;easy&amp;rdquo; to program, and correctly, language support is the way to go, leveraging types and compiler knowledge to help programmers.&lt;/p&gt;

&lt;p&gt;This is not a new thought, of course. Parallel languages have been designed and implemented for decades. But none can be said to have truly caught on universally in practice. For example, as a graduate student in the late 1990s, I learned and used &lt;a href=&#34;http://www.cs.cmu.edu/~guyb/&#34;&gt;Guy Blelloch&lt;/a&gt;&amp;rsquo;s &lt;a href=&#34;http://www.cs.cmu.edu/~scandal/nesl.html&#34;&gt;NESL&lt;/a&gt;, based on the functional language &lt;a href=&#34;http://en.wikipedia.org/wiki/Standard_ML&#34;&gt;Standard ML&lt;/a&gt;, and I briefly participated in exploring bringing the ideas from NESL back into ML itself, as part of the &lt;a href=&#34;https://www.cs.cmu.edu/~pscico/&#34;&gt;PSciCo project&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.haskell.org/haskellwiki/GHC/Data_Parallel_Haskell&#34;&gt;Data Parallel Haskell&lt;/a&gt; is another example of an attempt at a very high level parallel programming language.&lt;/p&gt;

&lt;p&gt;But these languages all come from the functional programming world.&lt;/p&gt;

&lt;h2 id=&#34;mutation:277903bcdd4917269c8c2ab8eefc7e73&#34;&gt;Mutation&lt;/h2&gt;

&lt;p&gt;Apparently the goal of Parasail is to not force programmers to go all out into functional programming. For both style and efficiency, it may be desirable to program imperatively, with mutation. So how does Parasail try to cope with all the potential problems caused by mutation?&lt;/p&gt;

&lt;p&gt;Parasail bans pointers, hiding them from the programmer by using types. In particular, assignment is by copy, but move and swap semantics are used underneath.&lt;/p&gt;

&lt;h2 id=&#34;memory-management:277903bcdd4917269c8c2ab8eefc7e73&#34;&gt;Memory management&lt;/h2&gt;

&lt;p&gt;Furthermore, garbage collection is avoided through &lt;a href=&#34;http://en.wikipedia.org/wiki/Region-based_memory_management&#34;&gt;region-based memory management&lt;/a&gt;. This is an old idea, of course: I remember experimenting with using MLKit from the 1990s by Tofte and Talpin when it was hot off the press.&lt;/p&gt;

&lt;h2 id=&#34;code-examples:277903bcdd4917269c8c2ab8eefc7e73&#34;&gt;Code examples&lt;/h2&gt;

&lt;p&gt;Taft gave some code examples to illustrate paralellization in Parasail. For example, quicksort is important because of its use of mutation.&lt;/p&gt;

&lt;h2 id=&#34;other-features:277903bcdd4917269c8c2ab8eefc7e73&#34;&gt;Other features&lt;/h2&gt;

&lt;p&gt;&lt;code&gt;return&lt;/code&gt; is intentionally a sync point that introduces nondeterminism. Also, underneath, work stealing is used to handle the threads used underneath.&lt;/p&gt;

&lt;h2 id=&#34;conclusion:277903bcdd4917269c8c2ab8eefc7e73&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;It was interesting to see new work on parallel programming languages. Check out Parasail&amp;rsquo;s Web site if you&amp;rsquo;re interested in learning more.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>