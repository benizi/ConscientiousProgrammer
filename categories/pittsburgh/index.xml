<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Pittsburgh on The Conscientious Programmer</title>
    <link>http://ConscientiousProgrammer.com/categories/pittsburgh/</link>
    <description>Recent content in Pittsburgh on The Conscientious Programmer</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Oct 2014 21:10:18 -0400</lastBuildDate>
    <atom:link href="http://ConscientiousProgrammer.com/categories/pittsburgh/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Pittsburgh Code and Supply: Making music with Overtone in Clojure; Conveying information through sound</title>
      <link>http://conscientiousprogrammer.com/blog/2014/10/07/pittsburgh-code-and-supply-making-music-with-overtone-in-clojure-conveying-information-through-sound/</link>
      <pubDate>Tue, 07 Oct 2014 21:10:18 -0400</pubDate>
      
      <guid>http://conscientiousprogrammer.com/blog/2014/10/07/pittsburgh-code-and-supply-making-music-with-overtone-in-clojure-conveying-information-through-sound/</guid>
      <description>

&lt;p&gt;I attended &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Code-Supply/events/202086812&#34;&gt;a fine meeting&lt;/a&gt; of &lt;a href=&#34;http://www.codeandsupply.co/&#34;&gt;Pittsburgh Code and Supply&lt;/a&gt; dedicated to two related topics: &lt;em&gt;music&lt;/em&gt; and &lt;em&gt;sonification&lt;/em&gt;. I thought it was a great idea to have presentations on both topics in the same session, thereby giving a broad view of what can be done with &lt;em&gt;sound&lt;/em&gt; through computation.&lt;/p&gt;

&lt;h2 id=&#34;erik-swanson-on-overtone-in-clojure:eae2c8db91585e112346d13d734d08c3&#34;&gt;Erik Swanson on Overtone in Clojure&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;http://overtone.github.io/&#34;&gt;Overtone&lt;/a&gt; is a very interesting environment for programmable music written in Clojure that I&amp;rsquo;d heard of years ago but never gotten around to playing with, simply because my primary interest in music is &lt;a href=&#34;http://franklinchen.com/blog/categories/music/&#34;&gt;playing music on traditional physical instruments with my own hands, the old-fashioned way&lt;/a&gt;. However, I am definitely open to the idea of doing interesting new things with computer aid; it just has not been a priority to explore.&lt;/p&gt;

&lt;p&gt;As preparation for the presentation (I don&amp;rsquo;t like feeling completely lost during live demos; I usually do!), I actually finally set up an Overtone project with Leiningen and walked through a tutorial that simply used the Clojure CIDER mode in Emacs to operate in a REPL. I didn&amp;rsquo;t do any real live-coding, however. I just wanted to get a taste.&lt;/p&gt;

&lt;p&gt;Erik Swanson gave a great presentation in which he described what he was doing as he live-coded some music with Emacs, incrementally creating instruments and generating pitches. Because of his presentation, I feel more comfortable about the prospect of really digging into Overtone if I ever want to.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s a video of his presentation:&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/w7ARayiKBrE&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2 id=&#34;keith-callenberg-https-twitter-com-keithcallenberg-on-conveying-information-through-sound:eae2c8db91585e112346d13d734d08c3&#34;&gt;&lt;a href=&#34;https://twitter.com/keithcallenberg&#34;&gt;Keith Callenberg&lt;/a&gt; on conveying information through sound&lt;/h2&gt;

&lt;p&gt;I learned a new word today: &lt;a href=&#34;http://en.wikipedia.org/wiki/Sonification&#34;&gt;&amp;ldquo;sonification&amp;rdquo;&lt;/a&gt;, the use of non-speech audio to convey information.&lt;/p&gt;

&lt;p&gt;I may have vaguely encountered sonification before, but never while fully attentive to it. That changed when Keith Callenberg, a computational scientist, gave a fine presentation in which he gave numerous striking examples of sonification. He made the important distinction between music and sonification: music is sound for an aesthetic purpose, but sonification is for information transfer.&lt;/p&gt;

&lt;p&gt;He convincingly showed why sonification is useful for data analysis, and also noted that our culture is strangely dominated by the &lt;em&gt;visual&lt;/em&gt;, so there remain many opportunities to use sound to understand data. (Also, sonification is used to help the visually impaired.)&lt;/p&gt;

&lt;p&gt;One local example he gave was a particulate monitoring study done at CMU.&lt;/p&gt;

&lt;h2 id=&#34;david-souther-on-web-audio-in-javascript:eae2c8db91585e112346d13d734d08c3&#34;&gt;David Souther on Web Audio in JavaScript&lt;/h2&gt;

&lt;p&gt;I thought we were done for the evening, but David Souther hopped up with an unscheduled lightning talk on using Web Audio in JavaScript.&lt;/p&gt;

&lt;h2 id=&#34;conclusion:eae2c8db91585e112346d13d734d08c3&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I enjoyed the presentations on music and sound, and got some ideas for stuff I might want to do myself. Another excellent session for Pittsburgh Code and Supply!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pittsburgh Code and Supply: Programming in journalism</title>
      <link>http://conscientiousprogrammer.com/blog/2014/07/17/pittsburgh-code-and-supply-programming-in-journalism/</link>
      <pubDate>Thu, 17 Jul 2014 21:21:19 -0400</pubDate>
      
      <guid>http://conscientiousprogrammer.com/blog/2014/07/17/pittsburgh-code-and-supply-programming-in-journalism/</guid>
      <description>

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://static.squarespace.com/static/538f3cc8e4b00f52172b5560/t/53a4ec76e4b0488fb14c5a29/1403317372203/sign.png?format=500w&#34; /&gt;
    
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;I finally attended my first ever &lt;a href=&#34;http://www.codeandsupply.co/&#34;&gt;Pittsburgh Code and Supply&lt;/a&gt; meeting! The group, which posts its &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Code-Supply/&#34;&gt;events on Meetup&lt;/a&gt;, was created by local Pittsburgh software developer &lt;a href=&#34;https://twitter.com/justinxreese&#34;&gt;Justin Reese&lt;/a&gt; just a few months ago, in March 2014. His vision is to create a local community that, unlike conventional specific language/technology-based meetups, is much more universal and broad. If you haven&amp;rsquo;t do so already, read more about the &lt;a href=&#34;http://www.codeandsupply.co/about&#34;&gt;goals of Pittsburgh Code and Supply&lt;/a&gt;. I&amp;rsquo;m very excited about this new group!&lt;/p&gt;

&lt;p&gt;The Code and Supply meetup I just attended was about &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Code-Supply/events/186766512/&#34;&gt;&amp;ldquo;Programming in journalism&amp;rdquo;&lt;/a&gt;. This is a topic of huge importance, and I was excited to attend to hear more about what some local journalist/programmers are doing.&lt;/p&gt;

&lt;h2 id=&#34;a-bit-about-sponsors:5ceb897fd4e46960a338a7fd3d6cf4e6&#34;&gt;A bit about sponsors&lt;/h2&gt;

&lt;p&gt;Justin opened by briefly saying a few words about the goals of Pittsburgh Code and Supply. He then noted that this month, the group did not have sponsors, unfortunately.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Pittsburgh Code and Supply needs sponsors!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;If you like what Code and Supply is doing, please consider seeing if your employer would be willing to step up as a sponsor for the group.&lt;/p&gt;

&lt;h2 id=&#34;contribute:5ceb897fd4e46960a338a7fd3d6cf4e6&#34;&gt;Contribute!&lt;/h2&gt;

&lt;p&gt;Also, in any case, spread the word about the group.&lt;/p&gt;

&lt;p&gt;This is my first meeting, and next Monday, I am actually going to give my first presentation for the group, on &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Code-Supply/events/183483622/&#34;&gt;&amp;ldquo;Type-Directed TDD in Rust&amp;rdquo;&lt;/a&gt;. The group is always looking for people to speak about something or facilitate other formats of meetings, so &lt;a href=&#34;http://www.codeandsupply.co/speak/&#34;&gt;sign up&lt;/a&gt; if you have an idea! I personally have some ideas I&amp;rsquo;d like to propose for future meetings, such as discussions about technology-related topics such as philosophy, history, and education.&lt;/p&gt;

&lt;h2 id=&#34;amyjo-brown:5ceb897fd4e46960a338a7fd3d6cf4e6&#34;&gt;AmyJo Brown&lt;/h2&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/DaOxhNkHvvw&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&#34;http://amyjobrown.com/&#34;&gt;AmyJo Brown&lt;/a&gt;, an independent journalist, gave a great talk about the kind of work that she does, and why it is important. She gave an overview of how journalism has changed because of the availability of data and because of the complexity of the world, both of which lead to the necessity of telling stories differently, as evidenced by what &lt;a href=&#34;http://www.propublica.org/&#34;&gt;ProPublica&lt;/a&gt;, the &lt;a href=&#34;http://www.nytimes.com/&#34;&gt;New York Times&lt;/a&gt;, and the &lt;a href=&#34;http://www.latimes.com/&#34;&gt;Los Angeles Times&lt;/a&gt; have been doing.&lt;/p&gt;

&lt;p&gt;Her own work involves tracking political donations (&amp;ldquo;follow the money&amp;rdquo;).&lt;/p&gt;

&lt;p&gt;She gave examples of software tools she uses to get data, clean it, analyze it, and archive the whole process. On the programming end, she programs in Python, for example (Django for Web development), and uses &lt;a href=&#34;http://www.documentcloud.org/&#34;&gt;DocumentCloud&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;She talked about many things to keep in mind while doing this kind of data journalism. First of all, you have to know the limitations of the data you&amp;rsquo;re getting. She has to deal with handwritten documents, and data in different formats. Data that is clearly incomplete or entered wrong (whether accidentally or maliciously). It is necessary to know the domain, know the context in which data was collected or required or submitted, to not fall into the trap of just blindly treating data as a record of the full truth and just get into programmatically processing it. There&amp;rsquo;s a lot that involves human judgment calls. And this is why it is so important to save all the original information and document each step of data &amp;ldquo;cleaning&amp;rdquo; and interpretation.&lt;/p&gt;

&lt;p&gt;Near the end of her talk, AmyJo had her colleague Katrina speak a bit also. Katrina was not originally trained as a programmer, but was always interested in politics. She ended up getting into programming later.&lt;/p&gt;

&lt;p&gt;(I&amp;rsquo;m always very excited and impressed to hear of people with domain knowledge and passion who take up computer programming as a useful skill to apply to their domain. Sometimes I hear people saying &amp;ldquo;please don&amp;rsquo;t code&amp;rdquo;; I totally disagree with this sentiment and believe that &lt;a href=&#34;http://franklinchen.com/blog/2011/12/09/why-everyone-should-learn-computer-science/&#34;&gt;everyone can benefit from learning the fundamentals of computer science and programming&lt;/a&gt;.)&lt;/p&gt;

&lt;h2 id=&#34;andrew-mcgill:5ceb897fd4e46960a338a7fd3d6cf4e6&#34;&gt;Andrew McGill&lt;/h2&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;//www.youtube.com/embed/0iT9rhwRXVs&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href=&#34;http://www.andrewrmcgill.com/&#34;&gt;Andrew McGill&lt;/a&gt; bills himself as &amp;ldquo;your friendly neighborhood journalist&amp;rdquo;, and works for the &lt;a href=&#34;http://www.post-gazette.com/&#34;&gt;Pittsburgh Post-Gazette&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;He started by talking about his interesting career path, which involved being into computers before college, but then going to college and then finding other interests and abandoning programming, and then only later taking it back up, in the service of journalism, to enable him to find data and tell stories through visualization.&lt;/p&gt;

&lt;p&gt;He showed us specific Web sites and articles he has created to provide better visualizations of data than what is available in raw form. For example, on the funny side, there is &lt;a href=&#34;http://newsinteractive.post-gazette.com/wheresbill/&#34;&gt;&amp;ldquo;Where&amp;rsquo;s Bill?&amp;rdquo;&lt;/a&gt;, which he created because he was not happy with the &amp;ldquo;official&amp;rdquo; boring text news feed of Mayor Bill Peduto&amp;rsquo;s calendar. He scraped the official site with PHP. He also created a Bill Peduto Twitter bot using Python.&lt;/p&gt;

&lt;p&gt;He also showed a D3-based visualization of &lt;a href=&#34;http://newsinteractive.post-gazette.com/plugged-wells/&#34;&gt;&amp;ldquo;The Mystery of the Plugged Wells&amp;rdquo;&lt;/a&gt;. Again, the point was to take already available data but to tell a story better with it than just giving raw tables or a purely text-based narrative.&lt;/p&gt;

&lt;p&gt;He showed some other projects, such as a visualization of school comparisons based on &lt;a href=&#34;http://en.wikipedia.org/wiki/Pennsylvania_System_of_School_Assessment&#34;&gt;PSSA&lt;/a&gt; data.&lt;/p&gt;

&lt;h2 id=&#34;questions-and-answers:5ceb897fd4e46960a338a7fd3d6cf4e6&#34;&gt;Questions and answers&lt;/h2&gt;

&lt;p&gt;There were quite a lot of questions posed to the presenters throughout the evening, on the technologies used, on work with graphic designers, on the process of obtaining data, and political implications of the work. Great discussions.&lt;/p&gt;

&lt;h2 id=&#34;technologies-used:5ceb897fd4e46960a338a7fd3d6cf4e6&#34;&gt;Technologies used&lt;/h2&gt;

&lt;p&gt;Here&amp;rsquo;s something resembling a summary of technologies mentioned that the presenters use:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;Django&lt;/li&gt;
&lt;li&gt;DocumentCloud&lt;/li&gt;
&lt;li&gt;Bootstrap&lt;/li&gt;
&lt;li&gt;Git&lt;/li&gt;
&lt;li&gt;R&lt;/li&gt;
&lt;li&gt;SQL&lt;/li&gt;
&lt;li&gt;OpenRefine&lt;/li&gt;
&lt;li&gt;D3&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;interesting-articles:5ceb897fd4e46960a338a7fd3d6cf4e6&#34;&gt;Interesting articles&lt;/h2&gt;

&lt;p&gt;Before the meetup, I posted to the &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Code-Supply/events/186766512/&#34;&gt;event page&lt;/a&gt; a link to a provocative (perhaps too harsh and ranty) article warning about dangers in data journalism, &lt;a href=&#34;http://www.niemanlab.org/2014/07/alberto-cairo-data-journalism-needs-to-up-its-own-standards/&#34;&gt;by visualization expert Alberto Cairo&lt;/a&gt;. It got no response.&lt;/p&gt;

&lt;p&gt;Later, I also posted a link to a thoughtful examination of the question of &lt;a href=&#34;http://source.opennews.org/en-US/learning/true-facts-maybe/&#34;&gt;epistemology in data journalism&lt;/a&gt;. I totally recommend reading that article.&lt;/p&gt;

&lt;p&gt;AmyJo after the meetup posted some more links on the event page:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://medium.com/@jeremybowers/why-im-a-newsroom-coder-860d9d49f684&#34;&gt;&amp;ldquo;Why I&amp;rsquo;m a newsroom coder&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://source.opennews.org/en-US/articles/planting-next-crop-newsroom-coders/&#34;&gt;&amp;ldquo;Planting the next crop of newsroom coders&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.nytimes.com/2014/07/17/opinion/the-fec-lags-on-campaign-finance-disclosures.html&#34;&gt;&amp;ldquo;Data delayed is democracy denied&amp;rdquo;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;conclusion:5ceb897fd4e46960a338a7fd3d6cf4e6&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I was very excited to attend my first Pittsburgh Code and Supply meetup, on the fascinating topic of programming in journalism. I felt I learned a lot about what is at stake and how programming is being used in journalism to better inform people of what is going on in the world.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pittsburgh Scala Meetup: Exploring type-directed, test-driven development using FizzBuzz (my practice talk)</title>
      <link>http://conscientiousprogrammer.com/blog/2014/05/15/pittsburgh-scala-meetup-exploring-type-directed/</link>
      <pubDate>Thu, 15 May 2014 22:49:48 -0400</pubDate>
      
      <guid>http://conscientiousprogrammer.com/blog/2014/05/15/pittsburgh-scala-meetup-exploring-type-directed/</guid>
      <description>

&lt;p&gt;The &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Scala-Meetup/&#34;&gt;Pittsburgh Scala Meetup&lt;/a&gt; met, with me presenting a &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Scala-Meetup/events/146581402/&#34;&gt;practice talk&lt;/a&gt; for &amp;ldquo;Exploring type-directed, test-driven development using FizzBuzz&amp;rdquo;, which I am presenting at the upcoming local &lt;a href=&#34;http://pghtechfest.com/&#34;&gt;Pittsburgh TechFest&lt;/a&gt; conference.&lt;/p&gt;

&lt;h2 id=&#34;presentation:0ca97438327f3bcfe743d5a186e4af3e&#34;&gt;Presentation&lt;/h2&gt;

&lt;p&gt;I have only recently completed the slides and code for my talk, and had not actually given the talk yet, so this was a practice talk that did not go so well, unfortunately.&lt;/p&gt;

&lt;p&gt;I spoke too quickly and had too much material to cover, and also got lost in some of my own slides. Oops. I think reaction to my talk was mixed. Some enjoyed it, while others seemed lost at places.&lt;/p&gt;

&lt;p&gt;After going home, I frankly felt that I had &lt;em&gt;failed&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;But I believe I can do much better. I have plenty of time to do a thorough revision before Pittsburgh TechFest in three weeks. I need to cut out material that is not needed for the core of what I am trying to achieve and make some things clearer (especially for the intended Pittsburgh TechFest audience, which I do not expect to even know Scala).&lt;/p&gt;

&lt;h2 id=&#34;supporting-material:0ca97438327f3bcfe743d5a186e4af3e&#34;&gt;Supporting material&lt;/h2&gt;

&lt;p&gt;Here is the &lt;a href=&#34;https://github.com/FranklinChen/talk-on-type-directed-tdd-using-fizzbuzz&#34;&gt;GitHub repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I don&amp;rsquo;t recommend looking at them, but for historical purposes, here are slides of the presentation &lt;a href=&#34;https://github.com/FranklinChen/talk-on-type-directed-tdd-using-fizzbuzz/blob/meetup/doc/presentation.pdf&#34;&gt;as it was given in the first draft&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;update-of-2014-05-16:0ca97438327f3bcfe743d5a186e4af3e&#34;&gt;(Update of 2014-05-16)&lt;/h2&gt;

&lt;p&gt;One day makes a difference in my confidence and determination! I noticed that the new &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Code-Supply/&#34;&gt;Pittsburgh Code and Supply&lt;/a&gt; group (which I have not yet attended) is soon having its inaugural &lt;a href=&#34;http://www.rust-lang.org/&#34;&gt;Rust&lt;/a&gt; &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Code-Supply/events/181773312/&#34;&gt;soon&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;So I decided to offer to do a version of my talk for Pittsburgh Code and Supply using Rust as the programming language (rather than Scala). I want to spread the news about how to effectively use a sufficiently typed programming language, whether it&amp;rsquo;s Scala or Rust or anything else sufficiently derived from the ML family of type systems.&lt;/p&gt;

&lt;p&gt;Justin will schedule it for some time in July. That should give me enough time, after Pittsburgh TechFest in early June, to learn enough Rust to convert my Scala code over properly!&lt;/p&gt;

&lt;h2 id=&#34;update-of-2014-06-07:0ca97438327f3bcfe743d5a186e4af3e&#34;&gt;(Update of 2014-06-07)&lt;/h2&gt;

&lt;p&gt;I much improved the presentation for Pittsburgh TechFest, which I &lt;a href=&#34;../../blog/2014/06/07/report-on-the-2014-pittsburgh-techfest-my-third-year/&#34;&gt;attended for the third year&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I recommend reading the &lt;a href=&#34;https://github.com/FranklinChen/talk-on-type-directed-tdd-using-fizzbuzz/blob/master/doc/article.pdf&#34;&gt;article version of the presentation&lt;/a&gt;, rather than the slides. This is the first time I&amp;rsquo;ve created both an article version of a presentation and slides for use during the live presentation. I will do this in the future as well. Slides are not meant to stand alone or even be read alone, but in case you really want to see them, they are here:&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&#34;//www.slideshare.net/slideshow/embed_code/37257104&#34; width=&#34;427&#34; height=&#34;356&#34; frameborder=&#34;0&#34; marginwidth=&#34;0&#34; marginheight=&#34;0&#34; scrolling=&#34;no&#34; style=&#34;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%;&#34; allowfullscreen&gt; &lt;/iframe&gt; &lt;div style=&#34;margin-bottom:5px&#34;&gt; &lt;strong&gt; &lt;a href=&#34;https://www.slideshare.net/FranklinChen/presentation-37257104&#34; title=&#34;Exploring type-directed, test-driven development: a case study using FizzBuzz&#34; target=&#34;_blank&#34;&gt;Exploring type-directed, test-driven development: a case study using FizzBuzz&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&#34;http://www.slideshare.net/FranklinChen&#34; target=&#34;_blank&#34;&gt;Franklin Chen&lt;/a&gt;&lt;/strong&gt; &lt;/div&gt;&lt;/p&gt;

&lt;h2 id=&#34;update-of-2014-07-17:0ca97438327f3bcfe743d5a186e4af3e&#34;&gt;(Update of 2014-07-17)&lt;/h2&gt;

&lt;p&gt;It&amp;rsquo;s crunch time. My Rust version of the talk, &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Code-Supply/events/183483622/&#34;&gt;&amp;ldquo;Type-Directed TDD in Rust&amp;rdquo;&lt;/a&gt; is coming next week.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OpenHack Pittsburgh: working on a private project</title>
      <link>http://conscientiousprogrammer.com/blog/2014/02/24/openhack-pittsburgh-working-on-a-private-project/</link>
      <pubDate>Mon, 24 Feb 2014 18:46:39 -0500</pubDate>
      
      <guid>http://conscientiousprogrammer.com/blog/2014/02/24/openhack-pittsburgh-working-on-a-private-project/</guid>
      <description>&lt;p&gt;Last month at OpenHack Pittsburgh, I had a rather &lt;a href=&#34;../../blog/2014/01/27/openhack-pittsburgh-a-great-place-to-share-and-learn/&#34;&gt;social time&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.meetup.com/pittsburgh-ruby/events/163727212/&#34;&gt;This month&lt;/a&gt;, I kept entirely to myself. I didn&amp;rsquo;t even speak up to say what I was working on. I was in a somber mood, and didn&amp;rsquo;t really want to talk. I worked on a private project that I will share when I am ready.&lt;/p&gt;

&lt;p&gt;It did feel consoling to be around other people, even while keeping to myself. Sometimes I just need to know that I am not alone.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pittsburgh Scala Meetup: Implicits</title>
      <link>http://conscientiousprogrammer.com/blog/2014/02/13/pittsburgh-scala-meetup-implicits/</link>
      <pubDate>Thu, 13 Feb 2014 21:45:59 -0500</pubDate>
      
      <guid>http://conscientiousprogrammer.com/blog/2014/02/13/pittsburgh-scala-meetup-implicits/</guid>
      <description>

&lt;p&gt;The &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Scala-Meetup/&#34;&gt;Pittsburgh Scala Meetup&lt;/a&gt; met with Justin presenting on &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Scala-Meetup/events/146581402/&#34;&gt;&amp;ldquo;Implicits&amp;rdquo;&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;implicits:e863a7ec4a3ba48279ebb2581682b028&#34;&gt;Implicits&lt;/h2&gt;

&lt;p&gt;Implicits are a novel and fantastically important feature of Scala. I wish there were a comprehensive and concise single resource about them out there, but I don&amp;rsquo;t actually know of one.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve been doing stuff with implicits lately. Not long ago, I wrote a blog post that involved &lt;a href=&#34;../../blog/2013/12/26/tostring-considered-harmful-part-2/&#34;&gt;using Scala implicits to avoid relying on the inherited Java &lt;code&gt;toString&lt;/code&gt; method&lt;/a&gt;. More recently, for this meetup I posted some code that I hoped someone would comment on, in which &lt;a href=&#34;https://github.com/franklinchen/test-specs2-matchers&#34;&gt;I used implicits to try to simplify a DSL&lt;/a&gt;. I&amp;rsquo;m not sure this is the right design choice, but it was an experiment.&lt;/p&gt;

&lt;h2 id=&#34;presentation:e863a7ec4a3ba48279ebb2581682b028&#34;&gt;Presentation&lt;/h2&gt;

&lt;p&gt;Around 7 of us showed up.&lt;/p&gt;

&lt;p&gt;Justin did some live coding using the Scala Worksheet to demonstrate various uses of implicits.&lt;/p&gt;

&lt;p&gt;One use is to define an &amp;ldquo;implicit function&amp;rdquo; that can convert of a value of one type to another. This can be overused badly, unfortunately.&lt;/p&gt;

&lt;p&gt;Another is to define an &amp;ldquo;implicit parameter&amp;rdquo; for a function so that you don&amp;rsquo;t have to explicitly pass a parameter to the function, if there is an implicit value in scope.&lt;/p&gt;

&lt;p&gt;Scala 2.10 greatly improved implicits by encapsulating the &amp;ldquo;conversion&amp;rdquo; pattern by means of an &amp;ldquo;implicit class&amp;rdquo;. Strangely, Scala Worksheet seemed to get confused when we played around and defined an implicit class that also had an implicit parameter. This led to some interesting detective work as we examined the generated JVM byte code to figure out what was going on! I thought it was useful for us to dig into this level; often it is useful to understand what something compiles to in order to better understand and appreciate a high-level language construct.&lt;/p&gt;

&lt;p&gt;Finally, we briefly discussed the type class pattern, which is arguably the most important use of implicits. This was too big a topic to get into here though.&lt;/p&gt;

&lt;h2 id=&#34;resources:e863a7ec4a3ba48279ebb2581682b028&#34;&gt;Resources&lt;/h2&gt;

&lt;p&gt;I posted some good resources that have popped up on my radar on Scala implicits:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;A fine &lt;a href=&#34;http://like-a-boss.net/2013/03/29/polymorphism-and-typeclasses-in-scala.html&#34;&gt;tutorial on type classes in Scala&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://typelevel.org/blog/2014/01/18/implicitly_existential.html&#34;&gt;Scary stuff with implicits&lt;/a&gt; that I don&amp;rsquo;t understand (yet).&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;conclusion:e863a7ec4a3ba48279ebb2581682b028&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Justin gave a nice introduction to implicits. I think the live coding and experimentation is a great way to involve people in code suggestions and discussion of what things mean and do. It was a fun time.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OpenHack Pittsburgh: a great place to share and learn</title>
      <link>http://conscientiousprogrammer.com/blog/2014/01/27/openhack-pittsburgh-a-great-place-to-share-and-learn/</link>
      <pubDate>Mon, 27 Jan 2014 22:38:48 -0500</pubDate>
      
      <guid>http://conscientiousprogrammer.com/blog/2014/01/27/openhack-pittsburgh-a-great-place-to-share-and-learn/</guid>
      <description>&lt;p&gt;Another month, another &lt;a href=&#34;http://www.meetup.com/pittsburgh-ruby/events/158236852/&#34;&gt;meeting of OpenHack Pittsburgh&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;The project I worked on was writing a blog post on the controversial subject of &lt;a href=&#34;https://twitter.com/BillLaboon/status/427525236406243328&#34;&gt;unit testing private methods&lt;/a&gt;. I ended up not finishing the post, not only because there&amp;rsquo;s a lot to say, but also because I got sidetracked (in a good way) because of discussions with people while at OpenHack!&lt;/p&gt;

&lt;p&gt;There were many good points that were made and so I had to reconsider some of my arguments. My overall viewpoint is still that the distinction between &amp;ldquo;public&amp;rdquo; and &amp;ldquo;private&amp;rdquo; is fluid, and that anything that seems significant enough that it feels like it should be tested should in fact be tested, ignoring the artifacts of how it is currently classified. One of the main counterpoints was that if you need to test it, then it should be factored out and made its own unit so that in essence, the rule against testing the private is maintained.&lt;/p&gt;

&lt;p&gt;Anyway, I will put up my post once I actually collect all my thoughts together and finish it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pittsburgh Scala Meetup: Introduction to Reactive</title>
      <link>http://conscientiousprogrammer.com/blog/2014/01/09/pittsburgh-scala-meetup-introduction-to-reactive/</link>
      <pubDate>Thu, 09 Jan 2014 21:29:20 -0500</pubDate>
      
      <guid>http://conscientiousprogrammer.com/blog/2014/01/09/pittsburgh-scala-meetup-introduction-to-reactive/</guid>
      <description>

&lt;p&gt;The &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Scala-Meetup/&#34;&gt;Pittsburgh Scala Meetup&lt;/a&gt; met with Josh presenting an &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Scala-Meetup/events/146581352/&#34;&gt;&amp;ldquo;Introduction to Reactive&amp;rdquo;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It was great.&lt;/p&gt;

&lt;h2 id=&#34;pre-meetup-dinner:1fbca7bab37ee55bb74190d8ff39e5b7&#34;&gt;Pre-meetup dinner&lt;/h2&gt;

&lt;p&gt;A couple of us (Justin, Josh, Chris, me) had an early dinner at Everyday Noodles before the meetup. Very filling!&lt;/p&gt;

&lt;h2 id=&#34;turnout:1fbca7bab37ee55bb74190d8ff39e5b7&#34;&gt;Turnout&lt;/h2&gt;

&lt;p&gt;Ten of us showed up for this meeting.&lt;/p&gt;

&lt;h2 id=&#34;presentation:1fbca7bab37ee55bb74190d8ff39e5b7&#34;&gt;Presentation&lt;/h2&gt;

&lt;h3 id=&#34;what-is-reactive-anyway:1fbca7bab37ee55bb74190d8ff39e5b7&#34;&gt;What is &amp;ldquo;reactive&amp;rdquo; anyway?&lt;/h3&gt;

&lt;p&gt;In case you didn&amp;rsquo;t hear about it in the media, the term &amp;ldquo;reactive&amp;rdquo; has been popularized in recent months, and I &lt;a href=&#34;../../blog/2013/12/31/review-of-the-free-coursera-course-principles-of-reactive-programming/&#34;&gt;reviewed the free Coursera course &amp;ldquo;Principles of Reactive Programming&amp;rdquo;&lt;/a&gt; that some of us in the Pittsburgh Scala group just completed, so check out my post for more on &amp;ldquo;reactive&amp;rdquo;.&lt;/p&gt;

&lt;h3 id=&#34;futures:1fbca7bab37ee55bb74190d8ff39e5b7&#34;&gt;Futures&lt;/h3&gt;

&lt;p&gt;Josh did a live SBT session reviewing futures and promises.&lt;/p&gt;

&lt;p&gt;He noted that futures have limitations as a component of reactive systems. (This had become apparent when &lt;a href=&#34;http://franklinchen.com/blog/2013/03/25/openhack-pittsburgh-exploring-scala-odds-and-ends/&#34;&gt;I started using futures last year in my personal projects&lt;/a&gt; and then &lt;a href=&#34;../../blog/2013/08/02/pittsburgh-ruby-python-social/&#34;&gt;for work&lt;/a&gt;.) By themselves, futures do not support cancellation or &lt;a href=&#34;http://en.wikipedia.org/wiki/Back_pressure&#34;&gt;back pressure&lt;/a&gt;. Futures are a low-level, limited mechanism that are the right tool only if you have a pipeline all the way through forward, no back channel.&lt;/p&gt;

&lt;p&gt;An alternative to futures, of course, is to go all out and use Akka actors. But the drawback I&amp;rsquo;ve found with that is that this is a heavyweight mechanism for problems that don&amp;rsquo;t need the full power of actors. I&amp;rsquo;ve wanted something more structured and lightweight than using actors directly. I find it tricky to program using actors, because it is very easy to start writing spaghetti code that is spread out everywhere (which is what happened to me in the final project for the Coursera course).&lt;/p&gt;

&lt;p&gt;It turns out, according to Josh, that Typesafe is working on precisely this problem! Nice. He&amp;rsquo;ll tell us more when it comes out.&lt;/p&gt;

&lt;h4 id=&#34;update-of-2014-07-10:1fbca7bab37ee55bb74190d8ff39e5b7&#34;&gt;(Update of 2014-07-10)&lt;/h4&gt;

&lt;p&gt;Half a year later, the promise was realized, as the Pittsburgh Scala Meetup had Josh &lt;a href=&#34;../../blog/2014/07/10/pittsburgh-scala-meetup-reactive-streams/&#34;&gt;gave a talk on the new API called Reactive Streams&lt;/a&gt;!&lt;/p&gt;

&lt;h3 id=&#34;play:1fbca7bab37ee55bb74190d8ff39e5b7&#34;&gt;Play&lt;/h3&gt;

&lt;p&gt;Josh demonstrated &lt;a href=&#34;http://typesafe.com/activator&#34;&gt;Typesafe Activator&lt;/a&gt;, the cool new Web browser-based platform for using Scala. He showed an app using Play that looks at blogs simultaneously and uses &lt;code&gt;recoverWith&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&#34;random-other-questions-and-discussions:1fbca7bab37ee55bb74190d8ff39e5b7&#34;&gt;Random other questions and discussions&lt;/h2&gt;

&lt;p&gt;What I like about the Pittsburgh Scala Meetup is that even when we have a presentation, discussion often wanders off to related topics (or unrelated topics). Anything goes, and I usually learn a lot.&lt;/p&gt;

&lt;p&gt;Someone asked about support for channels as in Go or Clojure&amp;rsquo;s &lt;a href=&#34;https://github.com/clojure/core.async&#34;&gt;&lt;code&gt;core.async&lt;/code&gt;&lt;/a&gt;. Josh said they&amp;rsquo;re working on this sort of thing with support for back pressure.&lt;/p&gt;

&lt;p&gt;Someone asked about how to connect &lt;a href=&#34;http://www.playframework.com/documentation/2.0/Iteratees&#34;&gt;iteratees&lt;/a&gt; with actors. Josh said, you can feed from an iteratee to an actor, and then just let the actor do stuff. However, there is some controversy about the whole iteratee thing in Play.&lt;/p&gt;

&lt;h2 id=&#34;conclusion:1fbca7bab37ee55bb74190d8ff39e5b7&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;This was a great Pittsburgh Scala Meetup session. I felt that a lot of questions that had built up in my mind after having gotten into reactive programming are being addressed with continuing work.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pittsburgh Scala Meetup: code walk through tic-tac-toe with Play</title>
      <link>http://conscientiousprogrammer.com/blog/2013/12/05/pittsburgh-scala-meetup-code-walk-through-tic-tac-toe-with-play/</link>
      <pubDate>Thu, 05 Dec 2013 22:15:52 -0500</pubDate>
      
      <guid>http://conscientiousprogrammer.com/blog/2013/12/05/pittsburgh-scala-meetup-code-walk-through-tic-tac-toe-with-play/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Scala-Meetup/&#34;&gt;Pittsburgh Scala Meetup&lt;/a&gt; met again with &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Scala-Meetup/events/146581232/&#34;&gt;Josh walking through his code for an interactive Web tic-tac-toe program implemented with Play&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It was a good session. I&amp;rsquo;m finding that studying code (with the code&amp;rsquo;s author present) is a great way to learn, to discuss design decisions and alternate possible choices that could have been made. For example, when it comes to actors, there are decisions to be made about how many actors, what state they should contain, and how to transition.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pittsburgh Scala Meetup: learning by reading Josh&#39;s code!</title>
      <link>http://conscientiousprogrammer.com/blog/2013/10/11/pittsburgh-scala-meetup-learning-by-reading-joshs-code/</link>
      <pubDate>Thu, 10 Oct 2013 23:09:33 -0500</pubDate>
      
      <guid>http://conscientiousprogrammer.com/blog/2013/10/11/pittsburgh-scala-meetup-learning-by-reading-joshs-code/</guid>
      <description>

&lt;p&gt;The &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Scala-Meetup/&#34;&gt;Pittsburgh Scala Meetup&lt;/a&gt; met to &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Scala-Meetup/events/135567132/&#34;&gt;learn by hacking&lt;/a&gt;. There was a change of plan because Josh couldn&amp;rsquo;t make it to the meeting, so instead of a presentation by him, we got a link to his GitHub repository for an implementation of an &lt;a href=&#34;https://github.com/jsuereth/tic-tac-toe&#34;&gt;interactive Web-based tic-tac-toe game using Play&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sometimes interesting things happen when plans are changed.&lt;/p&gt;

&lt;h2 id=&#34;reading-josh-s-code:95e88fa2aaa4d8fe2bdc4ba1715abea1&#34;&gt;Reading Josh&amp;rsquo;s code&lt;/h2&gt;

&lt;p&gt;Since Josh wasn&amp;rsquo;t around, we decided to study his code, and use it as the basis of discussion of Scala language features and idiomatic style, making sure that all of us understood what the code was doing. This turned out to be a surprisingly useful exercise, very participatory by everyone.&lt;/p&gt;

&lt;p&gt;Justin took charge of an SBT session as we played with modifying the code and figuring out what things did. I shared some tips on using SBT in &amp;ldquo;trigger mode&amp;rdquo;, which some had not known about. While experimenting, we ran into interesting Scala gotchas involving &lt;code&gt;def&lt;/code&gt; and &lt;code&gt;val&lt;/code&gt; in classes that mix in traits. We also had useful discussions on coding style, such as point-free style and use of underscores in closures, and converting between curried and uncurried functions. My personal point of view is that I prefer to be more explicit rather than more concise, to improve clarity, but much does depend on assumptions about people&amp;rsquo;s prior knowledge. Josh was writing this code for only himself, and the complete application was actually not meant to showcase the tic-tac-toe game logic anyway, but the use of Play.&lt;/p&gt;

&lt;h2 id=&#34;conclusion:95e88fa2aaa4d8fe2bdc4ba1715abea1&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I thought it was a really useful session in which we all helped one other get up to speed on various Scala language features or standard library APIs. We all learned something new, and we figured out Josh&amp;rsquo;s code, and collected questions to ask him when he comes back!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>OpenHack Pittsburgh: learning Elixir test-driven and package-publishing</title>
      <link>http://conscientiousprogrammer.com/blog/2013/08/26/openhack-pittsburgh-learning-elixir-test-driven-and-package-publishing/</link>
      <pubDate>Mon, 26 Aug 2013 22:09:00 +0000</pubDate>
      
      <guid>http://conscientiousprogrammer.com/blog/2013/08/26/openhack-pittsburgh-learning-elixir-test-driven-and-package-publishing/</guid>
      <description>

&lt;p&gt;It&amp;rsquo;s been a long time since I went to an &lt;a href=&#34;http://openhack.github.io/pittsburgh/&#34;&gt;OpenHack Pittsburgh&lt;/a&gt; meeting. The last time was &lt;a href=&#34;http://franklinchen.com/blog/2013/03/25/openhack-pittsburgh-exploring-scala-odds-and-ends/&#34;&gt;five months ago&lt;/a&gt;. On June 24, there was an &lt;a href=&#34;http://www.meetup.com/pittsburgh-ruby/events/120200292/&#34;&gt;OpenHack Pittsburgh&lt;/a&gt; held at &lt;a href=&#34;http://www.4moms.com/&#34;&gt;4moms&lt;/a&gt;, but I really needed to stay home and take it easy that evening, because of my busy schedule later in the week, including attending a &lt;a href=&#34;../../blog/2013/06/25/pittsburgh-java-user-group-building-and-evolving-a-java-api/&#34;&gt;PittJUG meeting&lt;/a&gt; and preparing a &lt;a href=&#34;../../blog/2013/06/26/pittsburgh-python-night-of-the-favorite-module/&#34;&gt;Pittsburgh Python talk&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://www.meetup.com/pittsburgh-ruby/events/120201842/&#34;&gt;This August meeting of OpenHack Pittsburgh&lt;/a&gt; was held at &lt;a href=&#34;http://www.modcloth.com/&#34;&gt;ModCloth&lt;/a&gt;, which I had never been to. It&amp;rsquo;s in Crafton, which is a place I&amp;rsquo;ve never been before, nearly half an hour drive from Pittsburgh. Because of worries about driving there near rush hour after work, I probably would not have signed up to attend had it not been for &lt;a href=&#34;http://justinxreese.com/&#34;&gt;Justin&lt;/a&gt;, the organizer of OpenHack Pittsburgh.&lt;/p&gt;

&lt;p&gt;What happened was that he asked for feedback about who was planning to work on what, and said he planned to learn some &lt;a href=&#34;http://elixir-lang.org/&#34;&gt;Elixir&lt;/a&gt;, a fairly new programming language built on top of the &lt;a href=&#34;http://www.erlang.org/&#34;&gt;Erlang&lt;/a&gt; runtime. Since this language had been on my list of things to look into, I decided that learning loves company, so I proposed to learn some Elixir in a test-driven way!&lt;/p&gt;

&lt;p&gt;What does that mean?&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://distilleryimage10.ak.instagram.com/1e5597280ea711e3b2db22000aeb1b88_7.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Franklin working on laptop&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;h2 id=&#34;how-to-learn-a-programming-language:1ce2624ff25ef568d351a0712ca69fa2&#34;&gt;How to learn a programming language&lt;/h2&gt;

&lt;p&gt;I have written code in probably around fifty (50) programming languages. I&amp;rsquo;m not kidding, and I&amp;rsquo;m not proud, but this is simply a fact of my having done programming since 1982, thirty-one (31!!) years ago. Let&amp;rsquo;s face it: languages come and go. I have personally sat at an IBM &lt;a href=&#34;http://en.wikipedia.org/wiki/Keypunch&#34;&gt;keypunch&lt;/a&gt; machine punching out cards for my COBOL and Fortran code.&lt;/p&gt;

&lt;p&gt;As with human languages, the fact is that to be truly productive in a language requires much more than learning some syntax and semantics. It requires actually writing and running and fixing code, and in the context of a realistic project.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;ve learned through trial and error that the most common ways of learning a programming language, like the most common ways of learning human languages (other than one&amp;rsquo;s first language), are terribly inefficient and misleading, resulting in minimal competence. I mean, reading through books, typing into a REPL, submitting a single file to a compiler or interpreter, etc.&lt;/p&gt;

&lt;p&gt;I feel that we should learn programming languages using a variety of approaches. Yes, the academic bottom-up semantics-based approach is critical in the long run, to avoid wasting a lot of time on pointless misunderstandings. Exploration in a REPL can be very rewarding. But I think what is often missing is the &lt;em&gt;biggest possible picture&lt;/em&gt;: immediately seeing how to write a program that is integrated with a test framework, uses libraries, is exportable and publishable publicly as a library, can be submitted to a continuous integration server, is editable in a decent editor or IDE, etc.&lt;/p&gt;

&lt;p&gt;Without seeing the biggest possible picture, one usually gets a horribly inaccurate picture of what it is like to program in a particular language ecosystem. (I will be writing more about this subject of pedagogy later.)&lt;/p&gt;

&lt;h2 id=&#34;my-proposal:1ce2624ff25ef568d351a0712ca69fa2&#34;&gt;My proposal&lt;/h2&gt;

&lt;p&gt;The last couple of languages I have learned in recent years, I slowly came to work with in a more efficient way than in the past, because I focused on matters such as testability. In particular, as I grew to wholly adopt TDD when writing any code at all in any language, it became clear to me that the best way to learn a new language must be in a test-driven way.&lt;/p&gt;

&lt;p&gt;Here&amp;rsquo;s an analogy: I believe the best way to learn a human language is to dive into how to be able to converse in some coherent way right off the bat. &lt;a href=&#34;http://www.fluentin3months.com/4-hour/&#34;&gt;Tim Ferriss and others&lt;/a&gt; have exploited this idea to &lt;em&gt;drive&lt;/em&gt; the learning of what is most relevant in &lt;a href=&#34;http://www.fourhourworkweek.com/blog/2007/11/07/how-to-learn-but-not-master-any-language-in-1-hour-plus-a-favor/&#34;&gt;grammar&lt;/a&gt; and &lt;a href=&#34;http://www.fourhourworkweek.com/blog/2009/01/20/learning-language/&#34;&gt;vocabulary&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;In the past, I learned human languages in a terrible way, taking lots of courses, but never actually getting fluent in everyday use. This is how we tend to learn &amp;ldquo;foreign&amp;rdquo; programming languages. My proposal is that learning a new programming language should involve getting as quickly as possible up to speed on a &lt;em&gt;minimum viable publishable library&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;That the software artifact should be a &lt;em&gt;library&lt;/em&gt;, and not just some executable program, is vital, because it means having to adhere by whatever standards apply to real-world API design in the language ecosystem, producing something that client code can import and call.&lt;/p&gt;

&lt;p&gt;That it should be &lt;em&gt;publishable&lt;/em&gt; is vital because it means adhering to standards of testing, of discovery through metadata, and enabling easy use by a client.&lt;/p&gt;

&lt;h2 id=&#34;my-concrete-example-with-learning-elixir-tonight:1ce2624ff25ef568d351a0712ca69fa2&#34;&gt;My concrete example with learning Elixir tonight&lt;/h2&gt;

&lt;h3 id=&#34;prior-background-in-erlang-and-elixir:1ce2624ff25ef568d351a0712ca69fa2&#34;&gt;Prior background in Erlang and Elixir&lt;/h3&gt;

&lt;p&gt;I went to OpenHack Pittsburgh &lt;em&gt;never&lt;/em&gt; having yet read any Elixir language material, never having written Elixir code, not even &amp;ldquo;hello, world&amp;rdquo;. The only things I had done before tonight:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I first heard of Erlang nearly two decades ago, and when I saw it, I was turned off by the Prolog-style syntax, and it didn&amp;rsquo;t seem relevant to anything I was doing at the time, so I ignored it.&lt;/li&gt;
&lt;li&gt;I intended to learn some Erlang earlier this year, but made little progress before putting it aside: I went to the free book &lt;a href=&#34;http://learnyousomeerlang.com/&#34;&gt;&amp;ldquo;Learn You Some Erlang for Great Good!&amp;rdquo;&lt;/a&gt; and downloaded the code and &lt;a href=&#34;https://github.com/FranklinChen/learn-you-some-erlang&#34;&gt;got it to compile&lt;/a&gt;, but did not proceed any further.&lt;/li&gt;
&lt;li&gt;I installed Elixir on my Mac &lt;a href=&#34;http://elixir-lang.org/getting_started/1.html&#34;&gt;using Homebrew&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I installed an &lt;a href=&#34;https://github.com/elixir-lang/emacs-elixir&#34;&gt;Emacs Elixir mode&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;I made a note of a free online book &lt;a href=&#34;http://chimera.labs.oreilly.com/books/1234000001642&#34;&gt;&amp;ldquo;Etudes for Elixir&amp;rdquo;&lt;/a&gt; and checked out the GitHub repository, but did not look at the book or code.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&#34;find-a-testing-framework:1ce2624ff25ef568d351a0712ca69fa2&#34;&gt;Find a testing framework&lt;/h3&gt;

&lt;p&gt;Upon arrival at ModCloth, getting pizza to eat, and plugging in my MacBook and connecting to the guest WiFi, the first thing I did was search for a testing framework for Elixir.&lt;/p&gt;

&lt;p&gt;It&amp;rsquo;s 2013, not 1993, so it is hard to convince me to invest any time at all in learning to operate in a language ecosystem that does not have at least a de facto standard testing framework. For every language that I currently actively use for writing serious programs, I operate with TDD. Some examples of languages and the test frameworks I currently use for them:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;C/C++: &lt;a href=&#34;https://code.google.com/p/googletest/&#34;&gt;googletest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Clojure: &lt;a href=&#34;https://github.com/marick/Midje&#34;&gt;Midje&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Haskell: &lt;a href=&#34;http://hspec.github.io/&#34;&gt;HSpec&lt;/a&gt; and &lt;a href=&#34;http://www.haskell.org/haskellwiki/Introduction_to_QuickCheck2&#34;&gt;QuickCheck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Java or Scala: &lt;a href=&#34;http://specs2.org/&#34;&gt;Specs2&lt;/a&gt; and &lt;a href=&#34;http://www.scalacheck.org/&#34;&gt;ScalaCheck&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;JavaScript: &lt;a href=&#34;http://pivotal.github.io/jasmine/&#34;&gt;Jasmine&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Perl: &lt;a href=&#34;http://search.cpan.org/~mschwern/Test-Simple-0.98/lib/Test/More.pm&#34;&gt;Test::More&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Python: &lt;a href=&#34;http://pytest.org/&#34;&gt;pytest&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Ruby: &lt;a href=&#34;http://rspec.info/&#34;&gt;RSpec&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Racket: &lt;a href=&#34;http://docs.racket-lang.org/rackunit/&#34;&gt;RackUnit&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Well, first Web search hit for Elixir and unit testing was &lt;a href=&#34;http://elixir-lang.org/getting_started/ex_unit/1.html&#34;&gt;ExUnit&lt;/a&gt;, so that was encouraging.&lt;/p&gt;

&lt;p&gt;Justin was still stuck installing Elixir, so we started exploring Elixir together off my laptop.&lt;/p&gt;

&lt;h3 id=&#34;one-test-file:1ce2624ff25ef568d351a0712ca69fa2&#34;&gt;One test file&lt;/h3&gt;

&lt;p&gt;The first thing I did after discovering ExUnit was to copy and paste the code for a sample test into Emacs and save it into a file &lt;code&gt;test_hello.exs&lt;/code&gt;, see that the Elixir mode was working (with syntax highlighting), and figure out how to run the test: &lt;code&gt;$ elixir test_hello.exs&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;It worked!&lt;/p&gt;

&lt;p&gt;Then we explored adding more tests, changing some assertions, and learning as went, by looking up the Elixir documentation. For example, Elixir uses an interesting callback mechanism for cleanly passing &amp;ldquo;setup&amp;rdquo; state to tests inside a single test case. Also, &lt;code&gt;assert&lt;/code&gt; and &lt;code&gt;test&lt;/code&gt; are &lt;a href=&#34;http://en.wikipedia.org/wiki/Macro_%28computer_science%29#Syntactic_macros&#34;&gt;syntactic macros&lt;/a&gt;, enabling them to do magic to analyze expressions, hence the support of natural assertion syntax (which &lt;a href=&#34;../../blog/2013/07/11/pittsburgh-ruby-lightning-talk-night/&#34;&gt;I like a lot better than special syntax&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;After writing some failing tests involving arithmetic and making them pass, I wrote a division by zero test. I was intrigued that not only did it fail, as expected, but also the compiler warned ahead of time that an exception was going to be raised. Nice. In any case, I learned how to make an assertion of the raising of an exception. This is very important. We should always pay attention to &lt;a href=&#34;http://franklinchen.com/blog/2013/06/01/report-on-the-second-pittsburgh-techfest-2013/&#34;&gt;testing the sad paths&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We saw in the documentation for ExUnit that there was a way to mark a test case as being OK to run concurrently with others. Great! These days there is no excuse not to be able to run tests concurrently. So I wrote another test case, which I put in the same source file (for the moment), and I wanted to see for myself that concurrency was happening. I wanted to call some kind of &amp;ldquo;sleep&amp;rdquo; function. To do that, I did a Web search, and found that Erlang comes with &lt;code&gt;sleep&lt;/code&gt; in the &lt;code&gt;timer&lt;/code&gt; module. I found out how to call Erlang from Elixir, and it worked!&lt;/p&gt;

&lt;h3 id=&#34;more-than-one-source-file:1ce2624ff25ef568d351a0712ca69fa2&#34;&gt;More than one source file&lt;/h3&gt;

&lt;p&gt;The next obvious step was to write a test for code that did not yet exist, but was to be written outside the test source file. For that, I had to figure out how to define a module and import it. OK, but then there&amp;rsquo;s the question of file organization. Hmm.&lt;/p&gt;

&lt;p&gt;At this point, the only reasonable thing to do (and which in retrospect should have been done first) was to find out what the &amp;ldquo;standard&amp;rdquo; way of organizing a project&amp;rsquo;s source files is supposed to be, and what the standard way to build everything is.&lt;/p&gt;

&lt;p&gt;A Web search quickly came up with &lt;a href=&#34;http://elixir-lang.org/getting_started/mix/1.html&#34;&gt;Mix&lt;/a&gt;. Awesome, the Elixir people are serious about real software development! Mix turns out to be inspired by Clojure&amp;rsquo;s &lt;a href=&#34;https://github.com/technomancy/leiningen&#34;&gt;Leiningen&lt;/a&gt;, which of course I use to start any new Clojure project. &lt;code&gt;$ mix new hello&lt;/code&gt; did the trick, creating the scaffolding for a new Elixir project.&lt;/p&gt;

&lt;p&gt;I refactored our existing &lt;code&gt;test_hello.exs&lt;/code&gt; file into two files (one for each test case) in the &lt;code&gt;test&lt;/code&gt; directory, then wrote a module &lt;code&gt;hello.ex&lt;/code&gt; into &lt;code&gt;lib&lt;/code&gt;. A failed test, then making it succeed, and finally I wrote my first non-test code in Elixir!&lt;/p&gt;

&lt;p&gt;Running tests is very easy once you are using Mix. Just &lt;code&gt;$ mix test&lt;/code&gt; does it.&lt;/p&gt;

&lt;h3 id=&#34;packaging-for-publshing:1ce2624ff25ef568d351a0712ca69fa2&#34;&gt;Packaging for publshing&lt;/h3&gt;

&lt;p&gt;At this point, I decided I wanted to create an actual Elixir package to publish.&lt;/p&gt;

&lt;p&gt;So I did a Web search to find out whether there was a standard repository and how to publish to it.&lt;/p&gt;

&lt;p&gt;Here we go, &lt;a href=&#34;http://expm.co/&#34;&gt;Expm&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;I installed the package manager, set up my user name and password, and went to work on a simple package to publish.&lt;/p&gt;

&lt;p&gt;I saw that nobody had yet contributed an implementation of &lt;a href=&#34;http://franklinchen.com/blog/2012/03/14/for-real-geeks-today-is-not-pi-day-but-half-tau-day/&#34;&gt;tau&lt;/a&gt;, so I quickly created a tau library with Mix, did &lt;code&gt;$ expm new&lt;/code&gt; to create a &lt;code&gt;package.exs&lt;/code&gt; template, filled it out, wrote an ExUnit test that passed, completed the &lt;code&gt;README.md&lt;/code&gt;, and just as OpenHack Pittsburgh was officially closing for the evening, I successfully published &lt;a href=&#34;http://expm.co/tau&#34;&gt;my tau package&lt;/a&gt;!&lt;/p&gt;

&lt;p&gt;Actually, I accidentally screwed up the first time, forgetting to change all the fields of the template &lt;code&gt;package.exs&lt;/code&gt; and ending up published &lt;code&gt;yourlib&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Oh, and I committed my project in Git and pushed &lt;a href=&#34;https://github.com/franklinchen/tau&#34;&gt;to GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;some-haskell-stuff:1ce2624ff25ef568d351a0712ca69fa2&#34;&gt;Some Haskell stuff&lt;/h2&gt;

&lt;p&gt;Steve McCarthy of &lt;a href=&#34;http://www.spacefinity.com/&#34;&gt;Spacefinity&lt;/a&gt; had announced, in the introduction at the beginning of the evening when each of us stood up to say what we planned to work on, that he wanted to do more with the &lt;a href=&#34;http://www.haskell.org/cabal/&#34;&gt;Cabal&lt;/a&gt; package manager for Haskell, so I spent a little bit of time getting him going by pointing him toward a sample Haskell code repository I initially &lt;a href=&#34;http://franklinchen.com/blog/2012/11/05/the-start-of-a-local-haskell-study-group.markdown/&#34;&gt;set up last year when some friends were interested in getting into Haskell&lt;/a&gt;; sadly, we&amp;rsquo;ve all been too busy for Haskell, so I&amp;rsquo;ve let the project rot, in the sense that my configuration file is not optimally organized and also there have been updates in the test framework world in Haskell since then.&lt;/p&gt;

&lt;p&gt;Anyway, here&amp;rsquo;s my &lt;a href=&#34;https://github.com/FranklinChen/project-euler-haskell&#34;&gt;&amp;ldquo;Project Euler in Haskell&amp;rdquo; repository&lt;/a&gt;. I plan to get around to improving it.&lt;/p&gt;

&lt;h2 id=&#34;thanks:1ce2624ff25ef568d351a0712ca69fa2&#34;&gt;Thanks&lt;/h2&gt;

&lt;p&gt;Thanks to ModCloth for providing the space, pizza, cookies, and WiFi!&lt;/p&gt;

&lt;p&gt;A big thank-you to Justin for providing the inspiration for me to try this experiment in learning!&lt;/p&gt;

&lt;p&gt;And thanks to Steve McCarthy for getting me to drag up an old Haskell project and making me think that I should soon update it to be a better example.&lt;/p&gt;

&lt;h2 id=&#34;conclusion:1ce2624ff25ef568d351a0712ca69fa2&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Tonight was the first time I ever started learning a new programming language, wrote unit tests right off the bat with proper project organization and also published a library immediately.&lt;/p&gt;

&lt;p&gt;Of course, there is much more to go in actually really learning and using Elixir, but as a first step in showing that Elixir has a viable ecosystem, I think the experiment was a success. My next steps in continuing to learn Elixir would include writing tests in conjunction with a deep dive into the actual semantics of the language. There is no substitute for the latter; the alternative is dangerously making assumptions based on superficial syntactic similarity with other languages (such as Ruby).&lt;/p&gt;

&lt;h3 id=&#34;update-of-2013-08-27:1ce2624ff25ef568d351a0712ca69fa2&#34;&gt;(Update of 2013-08-27)&lt;/h3&gt;

&lt;p&gt;One thing I didn&amp;rsquo;t get around to was setting up &lt;a href=&#34;http://travis-ci.org/&#34;&gt;Travis&lt;/a&gt; continuous integration. I believe this should also be part of the story in getting up and running in a new programming language environment.&lt;/p&gt;

&lt;p&gt;So I did a Web search and figured out how to create a suitable &lt;code&gt;.travis.yml&lt;/code&gt;. I committed and pushed to GitHub, flipped the switch in my Travis account, and you can see its &lt;a href=&#34;https://travis-ci.org/FranklinChen/tau&#34;&gt;passing status&lt;/a&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pittsburgh Data Visualization: D3 and only D3</title>
      <link>http://conscientiousprogrammer.com/blog/2013/08/22/pittsburgh-data-visualization-d3-and-only-d3/</link>
      <pubDate>Thu, 22 Aug 2013 22:01:22 -0400</pubDate>
      
      <guid>http://conscientiousprogrammer.com/blog/2013/08/22/pittsburgh-data-visualization-d3-and-only-d3/</guid>
      <description>

&lt;p&gt;Patrick gave a presentation for the &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Data-Visualization-Group/&#34;&gt;Pittsburgh Data Visualization Meetup&lt;/a&gt; on &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Data-Visualization-Group/events/135374702/&#34;&gt;only D3&lt;/a&gt;, because there was interest after the &lt;a href=&#34;../../blog/2013/08/07/pittsburgh-data-visualization-d3-and-r/&#34;&gt;previous meetup&lt;/a&gt; for more on D3.&lt;/p&gt;

&lt;h2 id=&#34;summary:11ce22fc2410b0ee563e8d1397078fe3&#34;&gt;Summary&lt;/h2&gt;

&lt;p&gt;Patrick started with a review of last time, on selections, data, callbacks, and transitions.&lt;/p&gt;

&lt;p&gt;Then he went into the use of &lt;a href=&#34;http://en.wikipedia.org/wiki/Heat_map&#34;&gt;heat maps&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Finally, he went into forces.&lt;/p&gt;

&lt;p&gt;I have to confess that I got lost in the presentation because of the volume of code presented and my unfamiliarity with the API. I believe that I&amp;rsquo;ve reached the limit of what I can passively absorb about using D3, and simply need to get down and dirty and create my own project.&lt;/p&gt;

&lt;p&gt;I was also feeling really tired and on the verge of getting sick. I felt very cold in the room and did not have a jacket on me in the summer.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My lightning talk at Steel City Ruby 2013: &#34;Reflections&#34;</title>
      <link>http://conscientiousprogrammer.com/blog/2013/08/18/my-lightning-talk-at-steel-city-ruby-2013/</link>
      <pubDate>Sun, 18 Aug 2013 21:54:09 -0400</pubDate>
      
      <guid>http://conscientiousprogrammer.com/blog/2013/08/18/my-lightning-talk-at-steel-city-ruby-2013/</guid>
      <description>

&lt;p&gt;Below is video for, and a transcript of, my five-minute lightning talk I gave at Steel City Ruby 2013, which I reported on &lt;a href=&#34;../../blog/2013/08/18/report-on-the-second-steel-city-ruby-conference-another-life-changing-one-for-me-part-1/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My 5-minute lightning talk starts at 19:35 and ends at 24:37 in the full video below. (I &lt;a href=&#34;https://vimeo.com/forums/topic:546&#34;&gt;couldn&amp;rsquo;t figure out how to turn off autoplay&lt;/a&gt; when I initially tried &lt;code&gt;#t=19m35s&lt;/code&gt;.)&lt;/p&gt;

&lt;p&gt;&lt;iframe src=&#34;https://player.vimeo.com/video/72703334&#34; width=&#34;500&#34; height=&#34;281&#34; frameborder=&#34;0&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt; &lt;p&gt;&lt;a href=&#34;https://vimeo.com/72703334&#34;&gt;Lightning Talks Day 1&lt;/a&gt; from &lt;a href=&#34;https://vimeo.com/confbots&#34;&gt;Confbots&lt;/a&gt; on &lt;a href=&#34;https://vimeo.com&#34;&gt;Vimeo&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Given on August 16 2013 at Steel City Ruby in Pittsburgh, PA&lt;/p&gt;&lt;/p&gt;

&lt;p&gt;I provide below my best try at transcribing my talk, which was given impromptu without any notes or slides. Unfortunately, I spoke very quickly and I can&amp;rsquo;t figure out every word I said; if you find any glaring omissions or errors, please let me know!&lt;/p&gt;

&lt;h2 id=&#34;transcript:7d0cb30036e685f934a73910cb455d4d&#34;&gt;Transcript&lt;/h2&gt;

&lt;p&gt;Hi, my name is Franklin, and I&amp;rsquo;ve lived in Pittsburgh fifteen years, and this is the largest audience of front of which I&amp;rsquo;ve ever spoken in my life! (Applause.)&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m an extreme introvert, and I&amp;rsquo;m also shy, but last year, I came to Steel City Ruby Conf, and I saw people giving talks, lightning talks, and I was inspired, so I started talking at local meetup groups, and I decided I had to speak here, and the question was, what was I going to talk about?&lt;/p&gt;

&lt;p&gt;Originally, I was going to title my lightning talk &amp;ldquo;Confessions&amp;rdquo;, but somebody already had &amp;ldquo;Confessions&amp;rdquo;, so I changed it to &amp;ldquo;Reflections&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;So, how many of you have had RSI? How many of you have had RSI from spending too much time at a &lt;a href=&#34;http://en.wikipedia.org/wiki/Keypunch&#34;&gt;keypunch&lt;/a&gt; machine? (I raise my hand. Laughter.) Yes, well, the first programming course I actually took, I coded on &lt;a href=&#34;http://en.wikipedia.org/wiki/Punched_card&#34;&gt;punch cards&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I sat at IBM keypunch machines and typed, and got RSI. And I&amp;rsquo;m telling you this because I may not look that old, but I&amp;rsquo;ve been around for some time (laughter). I punched cards, I wrote &lt;a href=&#34;http://en.wikipedia.org/wiki/COBOL&#34;&gt;COBOL&lt;/a&gt; programs, FORTRAN programs. We used cards and had to sort them, had to put in the compiler as well as the &lt;a href=&#34;http://en.wikipedia.org/wiki/Job_Control_Language&#34;&gt;Job Control Language&lt;/a&gt; cards, put them in a deck, ship them off to some place where my teacher took them, and that&amp;rsquo;s how we coded.&lt;/p&gt;

&lt;p&gt;So, I have some reflections on that, given how long I&amp;rsquo;ve been doing this stuff. I still don&amp;rsquo;t know what programming really is. And that&amp;rsquo;s why I come to places like Steel City Ruby Conf, and go to programming meetups, and I do this for many different programming languages. I try to do things better, and what I like about the Ruby community is that people are open and welcome, and they are care about quality, about different ideas. And also about things that relate to living, not just about coding.&lt;/p&gt;

&lt;p&gt;And so when I was looking at the program for this year&amp;rsquo;s conference, I was thinking, &amp;ldquo;how can I contribute here?&amp;rdquo; I&amp;rsquo;m not primarily a Ruby developer. But it turns out that programming is about much more than particular programming languages. In fact, I like that at lunch today, and last year, I met people who talked about Clojure, about Python, about Scala, and other languages, and it&amp;rsquo;s really great to have these conversations.&lt;/p&gt;

&lt;p&gt;So, I&amp;rsquo;ve seen code using &amp;ldquo;goto&amp;rdquo;, and seen books on &lt;a href=&#34;http://en.wikipedia.org/wiki/Structured_programming&#34;&gt;&amp;ldquo;structured programming&amp;rdquo;&lt;/a&gt; from the 60s, when I was writing COBOL in the early 1980s. I think some of you here are younger and haven&amp;rsquo;t had that experience of having to code with &amp;ldquo;goto&amp;rdquo;. So, I saw that. I saw C come into play, I saw C++, the object-oriented revolution. I saw functional programming, and now concurrency, and it&amp;rsquo;s amazing that things keep on happening. I think it&amp;rsquo;s a great time to be a developer.&lt;/p&gt;

&lt;p&gt;The last thing I want to say is, on the program there was a talk that was just given before lunch, and it was about depression. And that made a big impression on me. I&amp;rsquo;ve taken this moment to come out, as a 43-year-old, as having suffered from major depression, and really for about twenty-five years, I was unable to function. I even had to drop out of school twice, but I overcame that, and I think it&amp;rsquo;s time to stop being afraid to talk about it. We need to share it with our friends and talk about what we&amp;rsquo;ve done to overcome it and how to get help. So that&amp;rsquo;s my final reflection.&lt;/p&gt;

&lt;h2 id=&#34;reactions:7d0cb30036e685f934a73910cb455d4d&#34;&gt;Reactions&lt;/h2&gt;

&lt;p&gt;Note that the talk about depression I mentioned was the &lt;a href=&#34;http://vimeo.com/72690223&#34;&gt;morning talk by Greg Baugues, &amp;ldquo;Developers and Depression&amp;rdquo;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I was very moved that throughout the rest of the first day of the conference, people came up to me and thanked me for talking about my depression. Some of them said they were currently dealing with depression, or had done so. This only reinforced in my mind Greg&amp;rsquo;s point that there is still a stigma about openly discussing depression.&lt;/p&gt;

&lt;h2 id=&#34;some-historical-notes-on-programming:7d0cb30036e685f934a73910cb455d4d&#34;&gt;Some historical notes on programming&lt;/h2&gt;

&lt;p&gt;I regret that I did not keep any of my old COBOL programs. I do have some old data decks of punch cards in my basement, but no code!&lt;/p&gt;

&lt;p&gt;I believe that the textbook we used in my high school COBOL class in 1983 was &lt;a href=&#34;http://books.google.com/books?id=cE0gAQAAIAAJ&#34;&gt;Shelly and Cashman&amp;rsquo;s &amp;ldquo;Introduction to Computer Programming: Structured COBOL&amp;rdquo;&lt;/a&gt;. Basically all the programming books of the day for any language boasted of teaching structured programming. Given that, I was amused by the whole &amp;ldquo;object-oriented programming&amp;rdquo; fad in all texts in the 1990s. Marketing never changes.&lt;/p&gt;

&lt;h2 id=&#34;to-do:7d0cb30036e685f934a73910cb455d4d&#34;&gt;To do&lt;/h2&gt;

&lt;p&gt;I still haven&amp;rsquo;t told publicly the full story of my struggle with depression that finished its last chapter only late in 2004, when, after six years of therapy, I decided I no longer needed to see my therapist, and told her I was discontinuing my weekly visits to her I had been making since 1998. I expect to gradually roll out this story as I feel ready to tell it.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Steel City Ruby 2013: my second year and it radically changed my life again (part 1)</title>
      <link>http://conscientiousprogrammer.com/blog/2013/08/18/steel-city-ruby-2013-my-second-year-and-it-radically-changed-my-life-again-part-1/</link>
      <pubDate>Sun, 18 Aug 2013 20:57:27 -0400</pubDate>
      
      <guid>http://conscientiousprogrammer.com/blog/2013/08/18/steel-city-ruby-2013-my-second-year-and-it-radically-changed-my-life-again-part-1/</guid>
      <description>

&lt;p&gt;This year, I attended the second &lt;a href=&#34;http://steelcityrubyconf.org/&#34;&gt;Steel City Ruby Conference&lt;/a&gt;, 2013. The first one, last year (2012), was a &lt;a href=&#34;http://franklinchen.com/blog/2012/08/07/the-first-steel-city-ruby-conference-an-amazing-experience/&#34;&gt;life-changing experience&lt;/a&gt; for me. To my surprise, this second one also ended up being another radically transformative experience.&lt;/p&gt;

&lt;p&gt;This is part 1 of my report, covering the first day (Friday). Part 2, covering the second day (Saturday), is &lt;a href=&#34;../../blog/2013/08/18/report-on-the-second-steel-city-ruby-conference-another-life-changing-one-for-me-part-2/&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;videos-are-up:7e56a4d62ab96641f590de12053f21b0&#34;&gt;Videos are up!&lt;/h2&gt;

&lt;p&gt;Videos for all of the presentations of Steel City Ruby 2013 are available &lt;a href=&#34;http://www.confreaks.com/events/scrc2013&#34;&gt;on Confreaks&lt;/a&gt;. I am embedding them also in my reports.&lt;/p&gt;

&lt;h2 id=&#34;first-things:7e56a4d62ab96641f590de12053f21b0&#34;&gt;First things&lt;/h2&gt;

&lt;h3 id=&#34;i-signed-up-to-give-a-lightning-talk:7e56a4d62ab96641f590de12053f21b0&#34;&gt;I signed up to give a lightning talk&lt;/h3&gt;

&lt;p&gt;The very first thing I did, upon arriving Friday morning, was to sign up to give a lightning talk!! This was because I was so inspired by last year&amp;rsquo;s lightning talks. I wasn&amp;rsquo;t sure exactly what I was going to talk about, but I knew I wanted to say something about what I learned in the past year since the first Steel City Ruby, and how my life has changed as a result, so I wanted to write &amp;ldquo;Confessions&amp;rdquo;, but someone had already written down a &amp;ldquo;Confessions&amp;rdquo; lightning talk title, so I changed it to &amp;ldquo;Reflections&amp;rdquo;.&lt;/p&gt;

&lt;h3 id=&#34;i-signed-up-for-the-music-jam:7e56a4d62ab96641f590de12053f21b0&#34;&gt;I signed up for the music jam&lt;/h3&gt;

&lt;p&gt;Since I had just recently started learning to play ukulele, I signed up to participate in Jim Weirich&amp;rsquo;s music jam. Last year, I had brought my Irish flute, but was too scared to actually play, and just watched as everyone had fun. I vowed that this year I would actually play with Jim and others.&lt;/p&gt;

&lt;h4 id=&#34;update-of-2013-08-23:7e56a4d62ab96641f590de12053f21b0&#34;&gt;(Update of 2013-08-23)&lt;/h4&gt;

&lt;p&gt;I wrote in more detail about &lt;a href=&#34;http://franklinchen.com/blog/2013/08/23/another-unexpected-life-change-one-month-of-learning-to-play-ukulele/&#34;&gt;how and why I took up ukulele and how that has changed my life&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;carina-zona-handcrafting-community:7e56a4d62ab96641f590de12053f21b0&#34;&gt;Carina Zona, &amp;ldquo;Handcrafting Community&amp;rdquo;&lt;/h2&gt;

&lt;p&gt;Carina Zona opened by asking &amp;ldquo;What is community?&amp;rdquo;&lt;/p&gt;

&lt;p&gt;Good question: I&amp;rsquo;ve been wondering about that myself, since becoming part of various local &amp;ldquo;communities&amp;rdquo; in Pittsburgh in the past couple of years. What&amp;rsquo;s the difference between a mere &amp;ldquo;network&amp;rdquo; and a &amp;ldquo;community&amp;rdquo;?&lt;/p&gt;

&lt;p&gt;She noted that she is actually an introvert, so it&amp;rsquo;s been interesting for her to be where she is now.&lt;/p&gt;

&lt;p&gt;Carina said the communities involve &amp;ldquo;explicit values&amp;rdquo;. I thought that was a great point. Random people gathering without explicit values don&amp;rsquo;t really make a community.&lt;/p&gt;

&lt;p&gt;The part of her talk that really encouraged me was when she urged the cultivation of &amp;ldquo;forkable&amp;rdquo; communities. This means being able to copy what works and take it somewhere else and develop it. I thought this was a great metaphor, because if I want to build a community, it doesn&amp;rsquo;t make sense to just do it from scratch, but it makes sense to learn from what has worked elsewhere. In particular, the &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Scala-Meetup/&#34;&gt;Pittsburgh Scala Meetup&lt;/a&gt; that I&amp;rsquo;m part of is still small and not yet, in my mind, the kind of established, explicit community that &lt;a href=&#34;http://www.meetup.com/pittsburgh-ruby&#34;&gt;Pittsburgh Ruby&lt;/a&gt; clearly is. I have been wondering about doing something to build up more of a Pittsburgh Scala community.&lt;/p&gt;

&lt;p&gt;I took from this tlak a lot to think about and act upon.&lt;/p&gt;

&lt;iframe src=&#34;//player.vimeo.com/video/72671955&#34; width=&#34;500&#34; height=&#34;281&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2 id=&#34;julie-pagano-i-am-a-front-end-web-dev-and-so-can-you:7e56a4d62ab96641f590de12053f21b0&#34;&gt;Julie Pagano, &amp;ldquo;I am a Front-End Web Dev (And So Can You!)&amp;rdquo;&lt;/h2&gt;

&lt;p&gt;Julie gave an interesting talk about front-end development, emphasizing that this is serious stuff. She made certain important points that I totally agree with: HTML and CSS are in fact &lt;em&gt;programming languages&lt;/em&gt; in their own right, and should be thought of and used that way, with a mind toward design and &lt;em&gt;semantics&lt;/em&gt;, and not just hacking around. CSS being kind of a crappy language, it&amp;rsquo;s good to use something like SASS, which is better (for example, enabling the concept of mixins).&lt;/p&gt;

&lt;p&gt;She talked about the asset pipeline, and emphasized that one should learn JavaScript, not just hack jQuery. She listed resources to learn and to adopt good practices.&lt;/p&gt;

&lt;p&gt;All good advice for anyone doing front-end work!&lt;/p&gt;

&lt;iframe src=&#34;//player.vimeo.com/video/72682175&#34; width=&#34;500&#34; height=&#34;281&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2 id=&#34;greg-baugues-developers-and-depression:7e56a4d62ab96641f590de12053f21b0&#34;&gt;Greg Baugues, &amp;ldquo;Developers and Depression&amp;rdquo;&lt;/h2&gt;

&lt;p&gt;Greg gave a talk that stunned me.&lt;/p&gt;

&lt;p&gt;He talked about his personal struggle with depression (type II bipolar, specifically). Please watch his talk, &lt;em&gt;the whole thing&lt;/em&gt;, whether you&amp;rsquo;ve dealt with depression or whether you know someone with depression (and learn about the sometimes very subtle signs of it, since as he detailed in his talk, &lt;em&gt;depressed people do what they can to conceal their problem, out of shame&lt;/em&gt;).&lt;/p&gt;

&lt;p&gt;I made a surprising decision after watching his talk. I decided that in my yet-vaguely-thought-out lightning talk, &lt;strong&gt;I was going to confess to having had a very dark period of depression in my life&lt;/strong&gt;, a period that lasted around &lt;em&gt;twenty-five years&lt;/em&gt;, robbing me of a vast amount of my life. I did not want Greg&amp;rsquo;s talk to go to waste. I wanted to make sure that people at the conference knew that there are those of us who have these kinds of secrets, and that if anyone is having a problem and needs help, that there is no shame in seeking help, because my life was saved thanks to some important help. I will say more about this later.&lt;/p&gt;

&lt;iframe src=&#34;//player.vimeo.com/video/72690223&#34; width=&#34;500&#34; height=&#34;281&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2 id=&#34;lunch:7e56a4d62ab96641f590de12053f21b0&#34;&gt;Lunch&lt;/h2&gt;

&lt;p&gt;Before the conference, I had signed up to volunteer (as a Pittsburgh local) to take a group of people to lunch. I did this for two reasons:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;I wanted to contribute this year by volunteering to help for lunch.&lt;/li&gt;
&lt;li&gt;Last year, there was some overcrowding as too many people went to the same popular restaurants in the Strip District for lunch.&lt;/li&gt;
&lt;li&gt;Selfishly, I wanted a food option I chose!&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So I took people to &lt;a href=&#34;http://www.iloveindianspices.com/&#34;&gt;Indian Spices&lt;/a&gt; downtown. It has a reasonable lunch buffet (Abby and I went there once), and more to my taste than getting sandwiches somewhere.&lt;/p&gt;

&lt;h2 id=&#34;lightning-talks:7e56a4d62ab96641f590de12053f21b0&#34;&gt;Lightning talks&lt;/h2&gt;

&lt;p&gt;I ended up being scheduled for the last time slot of lightning talks. I was very nervous, had no notes or slides, and decided to simply get up there and try to make some kind of narrative out of various thoughts that had accumulated in my head for the past year, as well as Greg&amp;rsquo;s talk on depression.&lt;/p&gt;

&lt;p&gt;Given the anticipation, I confess I could not pay that much attention to the talks that preceded mine!&lt;/p&gt;

&lt;p&gt;Here are all of Friday&amp;rsquo;s lightning talks. I&amp;rsquo;ve provided in a separate post a &lt;a href=&#34;../../blog/2013/08/18/my-lightning-talk-at-steel-city-ruby-2013/&#34;&gt;transcript of my lightning talk, &amp;ldquo;Reflections&amp;rdquo;&lt;/a&gt;.&lt;/p&gt;

&lt;iframe src=&#34;//player.vimeo.com/video/72703334&#34; width=&#34;500&#34; height=&#34;281&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;h3 id=&#34;angela-harms-a-collaborative-approach-to-making:7e56a4d62ab96641f590de12053f21b0&#34;&gt;Angela Harms, &amp;ldquo;A Collaborative Approach to Making&amp;rdquo;&lt;/h3&gt;

&lt;p&gt;Angela Harms gave a presentation revolving around the distinction she made between &amp;ldquo;cooperation&amp;rdquo; and &amp;ldquo;collaboration&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;She led the audience in a short guided meditation before proceeding further.&lt;/p&gt;

&lt;p&gt;The important point she made about &amp;ldquo;cooperation&amp;rdquo; was that it is safe, and there is no risk, because you just show up halfway and the other person shows up halfway, and that&amp;rsquo;s all that happens. In &amp;ldquo;collaboration&amp;rdquo; your goal is much higher, to be &amp;ldquo;fully invested&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;The rest of the presentation involved quotes and references to authors and books and anecdotes I had seen before. But what resonated with me was this key distinction she made between &amp;ldquo;cooperation&amp;rdquo; and &amp;ldquo;collaboration&amp;rdquo;. I thought of situations in which I have felt ashamed because I only showed up halfway. I have to think about how to change that: either show up all the way, or perhaps if I cannot do that, then step out so that someone else who can do more than me can step in.&lt;/p&gt;

&lt;iframe src=&#34;//player.vimeo.com/video/72700176&#34; width=&#34;500&#34; height=&#34;281&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2 id=&#34;ashish-dixit-how-to-be-productive-on-a-new-team:7e56a4d62ab96641f590de12053f21b0&#34;&gt;Ashish Dixit, &amp;ldquo;How to be Productive on a New Team&amp;rdquo;&lt;/h2&gt;

&lt;p&gt;Ashish Dixit spoke about transitions as a programmer, bringing in his own story at Groupon. Some tidbits I took away from his talk: &amp;ldquo;learning all the things&amp;rdquo; is overwhelming, and working on bugs is a good way to learn about a system.&lt;/p&gt;

&lt;p&gt;It was 3:30 PM. I have to confess that I was getting tired and the day was getting long!&lt;/p&gt;

&lt;iframe src=&#34;//player.vimeo.com/video/72745494&#34; width=&#34;500&#34; height=&#34;281&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2 id=&#34;jim-weirich-friendly-flying-robots-with-ruby:7e56a4d62ab96641f590de12053f21b0&#34;&gt;Jim Weirich, &amp;ldquo;Friendly Flying Robots with Ruby&amp;rdquo;&lt;/h2&gt;

&lt;p&gt;Jim Weirich gave a demo of controlling a personal drone using a Ruby DSL he wrote wrapping around a C API. An elegant use of DSLs, definitely. One of the selling points of Ruby and Ruby culture is the creation of DSLs to make it easier and more fun to do programming that underneath can be doing low-level things, and it&amp;rsquo;s great that people like Jim make maximum use of this capability!&lt;/p&gt;

&lt;iframe src=&#34;//player.vimeo.com/video/72709097&#34; width=&#34;500&#34; height=&#34;281&#34; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;h2 id=&#34;party:7e56a4d62ab96641f590de12053f21b0&#34;&gt;Party&lt;/h2&gt;

&lt;p&gt;There was a party held at the &lt;a href=&#34;http://www.consolenergycenter.com/&#34;&gt;Consol Center&lt;/a&gt; after the Friday sessions. I enjoyed socializing and eating appetizer-type food there. I was surprised and touched by how many people privately came up to me and thanked me for speaking up briefly about the depression in my past. Greg himself was present and spoke to me (he had not been present during my lightning talk but had heard from others about it).&lt;/p&gt;

&lt;p&gt;I went home hoarse from talking so much with people about all sorts of things, ranging from financial investment (!) to the new programming language (in progress) &lt;a href=&#34;http://www.rust-lang.org/&#34;&gt;Rust&lt;/a&gt; (which Steve Klabnik is all excited about) to my experiences this year having &lt;a href=&#34;http://franklinchen.com/blog/2013/01/11/2013-is-my-year-of-scala/&#34;&gt;switched to Scala&lt;/a&gt; for almost all new work and personal coding.&lt;/p&gt;

&lt;h2 id=&#34;conclusion:7e56a4d62ab96641f590de12053f21b0&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I had a long and tremendously uplifting first day at the 2013 Steel City Ruby conference. My impromptu lightning talk ended up being a lot more personal than I had expected, but seemed to resonate with some people.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pittsburgh Java User Group: Java EE 7, 8, and beyond; or done?</title>
      <link>http://conscientiousprogrammer.com/blog/2013/08/13/pittsburgh-java-user-group-java-ee-7-8-and-beyond/</link>
      <pubDate>Tue, 13 Aug 2013 22:18:11 -0400</pubDate>
      
      <guid>http://conscientiousprogrammer.com/blog/2013/08/13/pittsburgh-java-user-group-java-ee-7-8-and-beyond/</guid>
      <description>

&lt;p&gt;The Pittsburgh Java User Group has not been meeting regularly for some time now. The &lt;a href=&#34;../../blog/2013/06/25/pittsburgh-java-user-group-building-and-evolving-a-java-api/&#34;&gt;last meeting was almost two months ago&lt;/a&gt;. I attended this one with the impression that it might well be my last attendance of the group, and even more, that it might be the end of the group altogether.&lt;/p&gt;

&lt;p&gt;The meeting did nothing to change my intuition.&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;../../images/pittjug-2013-08-13/group.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Pittsburgh Java User Group, 2013-08-13&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;h2 id=&#34;presentation-by-reza-rahman:b1f3aed35fff29eb7f9fd9ed02e1ec4c&#34;&gt;Presentation by Reza Rahman&lt;/h2&gt;

&lt;p&gt;Reza Rahman of Oracle, a &amp;ldquo;Java EE/GlassFish Evangelist&amp;rdquo; gave the presentation. His goal was to promote the new and exciting things coming up in Java EE, and try to get community feedback into what next.&lt;/p&gt;

&lt;p&gt;He gave a retrospective on how surprisingly long ago Java EE came on the scene, a decade ago, and described the evolution over the years to improve developer productivity.&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;../../images/pittjug-2013-08-13/speaker.jpg&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Reza Rahman&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;Also it was good to see that the new APIs have improved since the old ones, including &amp;ldquo;fluent&amp;rdquo; APIs, the fact is that everything still seems clunky and &amp;ldquo;old&amp;rdquo;.&lt;/p&gt;

&lt;p&gt;Furthermore, the Java community is still stuck with old stuff. He bemoaned the fact that the old J2EE is still most widely used.&lt;/p&gt;

&lt;p&gt;And Java developers are still not keeping up to date with developments. He asked the audience how many had heard of WebSocket, and hardly anyone raised their hands. He asked who knew what &amp;ldquo;hypermedia&amp;rdquo; is, and nobody raised their hand. Wow.&lt;/p&gt;

&lt;p&gt;The presentation went very long, to two hours. Near the end, he said that they wanted to know what people wanted next, but nobody really responded. He asked, &amp;ldquo;What do we need to do in the cloud?&amp;rdquo;&lt;/p&gt;

&lt;h2 id=&#34;conclusion:b1f3aed35fff29eb7f9fd9ed02e1ec4c&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;My overall impression was that I was done attending more PittJUG meetings. In any case, the main organizers have long since moved on to other stuff besides Java anyway, and gotten busy, and it has been hard to find speakers. More generally, those who attend have not seemed very excited and proactive about asking for speakers or topics to be covered.&lt;/p&gt;

&lt;p&gt;I believe it&amp;rsquo;s the end of an era. After all, I do not write any Java code any more, myself! I came to this talk about Java&amp;rsquo;s future expecting it to be my last, and it did not disappoint.&lt;/p&gt;

&lt;h2 id=&#34;update-of-2014-06-10:b1f3aed35fff29eb7f9fd9ed02e1ec4c&#34;&gt;(Update of 2014-06-10)&lt;/h2&gt;

&lt;p&gt;It&amp;rsquo;s been almost a year since the last PittJUG meeting, as far as I know. So I think the group really is dead.&lt;/p&gt;

&lt;p&gt;There has been talk of expanding the group to not just be about Java, but anything JVM-related (such as other languages compiling to the JVM, e.g., Scala, Clojure, JRuby). Nothing seems to have happened of that.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Pittsburgh Data Visualization: D3 and R</title>
      <link>http://conscientiousprogrammer.com/blog/2013/08/07/pittsburgh-data-visualization-d3-and-r/</link>
      <pubDate>Wed, 07 Aug 2013 22:19:55 -0400</pubDate>
      
      <guid>http://conscientiousprogrammer.com/blog/2013/08/07/pittsburgh-data-visualization-d3-and-r/</guid>
      <description>

&lt;p&gt;Just a week ago, the &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Data-Visualization-Group/&#34;&gt;Pittsburgh Data Visualization Meetup&lt;/a&gt; launched with a &lt;a href=&#34;../../blog/2013/07/30/pittsburgh-data-visualization-meetup-inaugural-meet-and-greet/&#34;&gt;&amp;ldquo;meet and greet&amp;rdquo; that I attended&lt;/a&gt;. Today was &lt;a href=&#34;http://www.meetup.com/Pittsburgh-Data-Visualization-Group/events/132375562/&#34;&gt;our first actual presentation-based meeting&lt;/a&gt;, with speakers giving introductions to both D3 and R.&lt;/p&gt;

&lt;h2 id=&#34;location:434e191ed892ef9beef4f8e71303dc18&#34;&gt;Location&lt;/h2&gt;

&lt;p&gt;The meeting was on the Pitt campus. Unfortunately, this meant no WiFi access, because guest WiFi requires a sponsor and is a hassle to set up. So this is not the perfect place to meet, but was available to Patrick in the summer.&lt;/p&gt;

&lt;p&gt;About 15 people showed up.&lt;/p&gt;

&lt;h2 id=&#34;patrick-on-d3:434e191ed892ef9beef4f8e71303dc18&#34;&gt;Patrick on D3&lt;/h2&gt;

&lt;p&gt;By popular demand, Patrick gave an introduction to D3.&lt;/p&gt;

&lt;p&gt;He is particularly interested in knowledge discovery in data mining. He gave an example of converting data from HTML to XML to SVG and then finally getting it into D3.&lt;/p&gt;

&lt;p&gt;Although D3 is a JavaScript library, its API feels like its own domain-specific language with its own conventions, so there&amp;rsquo;s a learning curve. Patrick gave a demo of hooking data up to D3 and then changing the data, and hooking up mouse events. He showed transitions for visualization when data changes. Apparently D3 does an efficient recalculation of what needs to happen when data changes.&lt;/p&gt;

&lt;p&gt;He also showed a force-directed graph.&lt;/p&gt;

&lt;h2 id=&#34;rihanna-on-r:434e191ed892ef9beef4f8e71303dc18&#34;&gt;Rihanna on R&lt;/h2&gt;

&lt;p&gt;Rihanna spoke about her use of R for her work.&lt;/p&gt;

&lt;p&gt;She has been using R for 13 years! She gave an overview of her work flow, which involves using a workspace and saving objects. She likes to get data from raw sources into R and use plots to look for patterns, spikes. Then she makes different plots in order to tell a story.&lt;/p&gt;

&lt;h2 id=&#34;conclusion:434e191ed892ef9beef4f8e71303dc18&#34;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;I found it very informative to hear about the work flows Patrick and Rihanna each adopted in order to find and report on interesting data.&lt;/p&gt;

&lt;p&gt;The main drawback of this meeting was that it was very long, because of two talks crammed into one evening. Since this was just the first meeting, I suggested that shorter talks in the future would enable more time for unstructured discussion at meetings.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>