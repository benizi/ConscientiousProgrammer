<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: pittsburgh | The Conscientious Programmer]]></title>
  <link href="http://ConscientiousProgrammer.com/blog/categories/pittsburgh/atom.xml" rel="self"/>
  <link href="http://ConscientiousProgrammer.com/"/>
  <updated>2014-07-31T10:44:45-04:00</updated>
  <id>http://ConscientiousProgrammer.com/</id>
  <author>
    <name><![CDATA[Franklin Chen]]></name>
    <email><![CDATA[franklinchen@franklinchen.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Pittsburgh Code and Supply: Programming in journalism]]></title>
    <link href="http://ConscientiousProgrammer.com/blog/2014/07/17/pittsburgh-code-and-supply-programming-in-journalism/"/>
    <updated>2014-07-17T21:21:19-04:00</updated>
    <id>http://ConscientiousProgrammer.com/blog/2014/07/17/pittsburgh-code-and-supply-programming-in-journalism</id>
    <content type="html"><![CDATA[<p><img class="<a" src="href="http://static.squarespace.com/static/538f3cc8e4b00f52172b5560/t/53a4ec76e4b0488fb14c5a29/1403317372203/sign.png?format=500w">http://static.squarespace.com/static/538f3cc8e4b00f52172b5560/t/53a4ec76e4b0488fb14c5a29/1403317372203/sign.png?format=500w</a>"></p>

<p>I finally attended my first ever <a href="http://www.codeandsupply.co/">Pittsburgh Code and Supply</a> meeting! The group, which posts its <a href="http://www.meetup.com/Pittsburgh-Code-Supply/">events on Meetup</a>, was created by local Pittsburgh software developer <a href="https://twitter.com/justinxreese">Justin Reese</a> just a few months ago, in March 2014. His vision is to create a local community that, unlike conventional specific language/technology-based meetups, is much more universal and broad. If you haven&rsquo;t do so already, read more about the <a href="http://www.codeandsupply.co/about">goals of Pittsburgh Code and Supply</a>. I&rsquo;m very excited about this new group!</p>

<p>The Code and Supply meetup I just attended was about <a href="http://www.meetup.com/Pittsburgh-Code-Supply/events/186766512/">&ldquo;Programming in journalism&rdquo;</a>. This is a topic of huge importance, and I was excited to attend to hear more about what some local journalist/programmers are doing.</p>

<!--more-->


<h2>A bit about sponsors</h2>

<p>Justin opened by briefly saying a few words about the goals of Pittsburgh Code and Supply. He then noted that this month, the group did not have sponsors, unfortunately.</p>

<p><strong>Pittsburgh Code and Supply needs sponsors!</strong></p>

<p>If you like what Code and Supply is doing, please consider seeing if your employer would be willing to step up as a sponsor for the group.</p>

<h2>Contribute!</h2>

<p>Also, in any case, spread the word about the group.</p>

<p>This is my first meeting, and next Monday, I am actually going to give my first presentation for the group, on <a href="http://www.meetup.com/Pittsburgh-Code-Supply/events/183483622/">&ldquo;Type-Directed TDD in Rust&rdquo;</a>. The group is always looking for people to speak about something or facilitate other formats of meetings, so <a href="http://www.codeandsupply.co/speak/">sign up</a> if you have an idea! I personally have some ideas I&rsquo;d like to propose for future meetings, such as discussions about technology-related topics such as philosophy, history, and education.</p>

<h2>AmyJo Brown</h2>

<iframe width="560" height="315" src="//www.youtube.com/embed/DaOxhNkHvvw" frameborder="0" allowfullscreen></iframe>


<p><a href="http://amyjobrown.com/">AmyJo Brown</a>, an independent journalist, gave a great talk about the kind of work that she does, and why it is important. She gave an overview of how journalism has changed because of the availability of data and because of the complexity of the world, both of which lead to the necessity of telling stories differently, as evidenced by what <a href="http://www.propublica.org/">ProPublica</a>, the <a href="http://www.nytimes.com/">New York Times</a>, and the <a href="http://www.latimes.com/">Los Angeles Times</a> have been doing.</p>

<p>Her own work involves tracking political donations (&ldquo;follow the money&rdquo;).</p>

<p>She gave examples of software tools she uses to get data, clean it, analyze it, and archive the whole process. On the programming end, she programs in Python, for example (Django for Web development), and uses <a href="http://www.documentcloud.org/">DocumentCloud</a>.</p>

<p>She talked about many things to keep in mind while doing this kind of data journalism. First of all, you have to know the limitations of the data you&rsquo;re getting. She has to deal with handwritten documents, and data in different formats. Data that is clearly incomplete or entered wrong (whether accidentally or maliciously). It is necessary to know the domain, know the context in which data was collected or required or submitted, to not fall into the trap of just blindly treating data as a record of the full truth and just get into programmatically processing it. There&rsquo;s a lot that involves human judgment calls. And this is why it is so important to save all the original information and document each step of data &ldquo;cleaning&rdquo; and interpretation.</p>

<p>Near the end of her talk, AmyJo had her colleague Katrina speak a bit also. Katrina was not originally trained as a programmer, but was always interested in politics. She ended up getting into programming later.</p>

<p>(I&rsquo;m always very excited and impressed to hear of people with domain knowledge and passion who take up computer programming as a useful skill to apply to their domain. Sometimes I hear people saying &ldquo;please don&rsquo;t code&rdquo;; I totally disagree with this sentiment and believe that <a href="http://franklinchen.com/blog/2011/12/09/why-everyone-should-learn-computer-science/">everyone can benefit from learning the fundamentals of computer science and programming</a>.)</p>

<h2>Andrew McGill</h2>

<iframe width="560" height="315" src="//www.youtube.com/embed/0iT9rhwRXVs" frameborder="0" allowfullscreen></iframe>


<p><a href="http://www.andrewrmcgill.com/">Andrew McGill</a> bills himself as &ldquo;your friendly neighborhood journalist&rdquo;, and works for the <a href="http://www.post-gazette.com/">Pittsburgh Post-Gazette</a>.</p>

<p>He started by talking about his interesting career path, which involved being into computers before college, but then going to college and then finding other interests and abandoning programming, and then only later taking it back up, in the service of journalism, to enable him to find data and tell stories through visualization.</p>

<p>He showed us specific Web sites and articles he has created to provide better visualizations of data than what is available in raw form. For example, on the funny side, there is <a href="http://newsinteractive.post-gazette.com/wheresbill/">&ldquo;Where&rsquo;s Bill?&rdquo;</a>, which he created because he was not happy with the &ldquo;official&rdquo; boring text news feed of Mayor Bill Peduto&rsquo;s calendar. He scraped the official site with PHP. He also created a Bill Peduto Twitter bot using Python.</p>

<p>He also showed a D3-based visualization of <a href="http://newsinteractive.post-gazette.com/plugged-wells/">&ldquo;The Mystery of the Plugged Wells&rdquo;</a>. Again, the point was to take already available data but to tell a story better with it than just giving raw tables or a purely text-based narrative.</p>

<p>He showed some other projects, such as a visualization of school comparisons based on <a href="http://en.wikipedia.org/wiki/Pennsylvania_System_of_School_Assessment">PSSA</a> data.</p>

<h2>Questions and answers</h2>

<p>There were quite a lot of questions posed to the presenters throughout the evening, on the technologies used, on work with graphic designers, on the process of obtaining data, and political implications of the work. Great discussions.</p>

<h2>Technologies used</h2>

<p>Here&rsquo;s something resembling a summary of technologies mentioned that the presenters use:</p>

<ul>
<li>Python</li>
<li>Django</li>
<li>DocumentCloud</li>
<li>Bootstrap</li>
<li>Git</li>
<li>R</li>
<li>SQL</li>
<li>OpenRefine</li>
<li>D3</li>
</ul>


<h2>Interesting articles</h2>

<p>Before the meetup, I posted to the <a href="http://www.meetup.com/Pittsburgh-Code-Supply/events/186766512/">event page</a> a link to a provocative (perhaps too harsh and ranty) article warning about dangers in data journalism, <a href="http://www.niemanlab.org/2014/07/alberto-cairo-data-journalism-needs-to-up-its-own-standards/">by visualization expert Alberto Cairo</a>. It got no response.</p>

<p>Later, I also posted a link to a thoughtful examination of the question of <a href="http://source.opennews.org/en-US/learning/true-facts-maybe/">epistemology in data journalism</a>. I totally recommend reading that article.</p>

<p>AmyJo after the meetup posted some more links on the event page:</p>

<ul>
<li><a href="https://medium.com/@jeremybowers/why-im-a-newsroom-coder-860d9d49f684">&ldquo;Why I&rsquo;m a newsroom coder&rdquo;</a></li>
<li><a href="https://source.opennews.org/en-US/articles/planting-next-crop-newsroom-coders/">&ldquo;Planting the next crop of newsroom coders&rdquo;</a></li>
<li><a href="http://www.nytimes.com/2014/07/17/opinion/the-fec-lags-on-campaign-finance-disclosures.html">&ldquo;Data delayed is democracy denied&rdquo;</a></li>
</ul>


<h2>Conclusion</h2>

<p>I was very excited to attend my first Pittsburgh Code and Supply meetup, on the fascinating topic of programming in journalism. I felt I learned a lot about what is at stake and how programming is being used in journalism to better inform people of what is going on in the world.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pittsburgh Scala Meetup: Exploring type-directed, test-driven development using FizzBuzz (my practice talk)]]></title>
    <link href="http://ConscientiousProgrammer.com/blog/2014/05/15/pittsburgh-scala-meetup-exploring-type-directed/"/>
    <updated>2014-05-15T22:49:48-04:00</updated>
    <id>http://ConscientiousProgrammer.com/blog/2014/05/15/pittsburgh-scala-meetup-exploring-type-directed</id>
    <content type="html"><![CDATA[<p>The <a href="http://www.meetup.com/Pittsburgh-Scala-Meetup/">Pittsburgh Scala Meetup</a> met, with me presenting a <a href="http://www.meetup.com/Pittsburgh-Scala-Meetup/events/146581402/">practice talk</a> for &ldquo;Exploring type-directed, test-driven development using FizzBuzz&rdquo;, which I am presenting at the upcoming local <a href="http://pghtechfest.com/">Pittsburgh TechFest</a> conference.</p>

<!--more-->


<h2>Presentation</h2>

<p>I have only recently completed the slides and code for my talk, and had not actually given the talk yet, so this was a practice talk that did not go so well, unfortunately.</p>

<p>I spoke too quickly and had too much material to cover, and also got lost in some of my own slides. Oops. I think reaction to my talk was mixed. Some enjoyed it, while others seemed lost at places.</p>

<p>After going home, I frankly felt that I had <em>failed</em>.</p>

<p>But I believe I can do much better. I have plenty of time to do a thorough revision before Pittsburgh TechFest in three weeks. I need to cut out material that is not needed for the core of what I am trying to achieve and make some things clearer (especially for the intended Pittsburgh TechFest audience, which I do not expect to even know Scala).</p>

<h2>Supporting material</h2>

<p>Here is the <a href="https://github.com/FranklinChen/talk-on-type-directed-tdd-using-fizzbuzz">GitHub repository</a>.</p>

<p>I don&rsquo;t recommend looking at them, but for historical purposes, here are slides of the presentation <a href="https://github.com/FranklinChen/talk-on-type-directed-tdd-using-fizzbuzz/blob/meetup/doc/presentation.pdf">as it was given in the first draft</a>.</p>

<h2>(Update of 2014-05-16)</h2>

<p>One day makes a difference in my confidence and determination! I noticed that the new <a href="http://www.meetup.com/Pittsburgh-Code-Supply/">Pittsburgh Code and Supply</a> group (which I have not yet attended) is soon having its inaugural <a href="http://www.rust-lang.org/">Rust</a> <a href="http://www.meetup.com/Pittsburgh-Code-Supply/events/181773312/">soon</a>.</p>

<p>So I decided to offer to do a version of my talk for Pittsburgh Code and Supply using Rust as the programming language (rather than Scala). I want to spread the news about how to effectively use a sufficiently typed programming language, whether it&rsquo;s Scala or Rust or anything else sufficiently derived from the ML family of type systems.</p>

<p>Justin will schedule it for some time in July. That should give me enough time, after Pittsburgh TechFest in early June, to learn enough Rust to convert my Scala code over properly!</p>

<h2>(Update of 2014-06-07)</h2>

<p>I much improved the presentation for Pittsburgh TechFest.</p>

<p>I recommend reading the <a href="https://github.com/FranklinChen/talk-on-type-directed-tdd-using-fizzbuzz/blob/master/doc/article.pdf">article version of the presentation</a>, rather than the slides. This is the first time I&rsquo;ve created both an article version of a presentation and slides for use during the live presentation. I will do this in the future as well. Slides are not meant to stand alone or even be read alone.</p>

<h2>(Update of 2014-07-17)</h2>

<p>It&rsquo;s crunch time. My Rust version of the talk, <a href="http://www.meetup.com/Pittsburgh-Code-Supply/events/183483622/">&ldquo;Type-Directed TDD in Rust&rdquo;</a> is coming next week.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pittsburgh Scala Meetup: Implicits]]></title>
    <link href="http://ConscientiousProgrammer.com/blog/2014/02/13/pittsburgh-scala-meetup-implicits/"/>
    <updated>2014-02-13T21:45:59-05:00</updated>
    <id>http://ConscientiousProgrammer.com/blog/2014/02/13/pittsburgh-scala-meetup-implicits</id>
    <content type="html"><![CDATA[<p>The <a href="http://www.meetup.com/Pittsburgh-Scala-Meetup/">Pittsburgh Scala Meetup</a> met with Justin presenting on <a href="http://www.meetup.com/Pittsburgh-Scala-Meetup/events/146581402/">&ldquo;Implicits&rdquo;</a>.</p>

<!--more-->


<h2>Implicits</h2>

<p>Implicits are a novel and fantastically important feature of Scala. I wish there were a comprehensive and concise single resource about them out there, but I don&rsquo;t actually know of one.</p>

<p>I&rsquo;ve been doing stuff with implicits lately. Not long ago, I wrote a blog post that involved <a href="/blog/2013/12/26/tostring-considered-harmful-part-2/">using Scala implicits to avoid relying on the inherited Java <code>toString</code> method</a>. More recently, for this meetup I posted some code that I hoped someone would comment on, in which <a href="https://github.com/franklinchen/test-specs2-matchers">I used implicits to try to simplify a DSL</a>. I&rsquo;m not sure this is the right design choice, but it was an experiment.</p>

<h2>Presentation</h2>

<p>Around 7 of us showed up.</p>

<p>Justin did some live coding using the Scala Worksheet to demonstrate various uses of implicits.</p>

<p>One use is to define an &ldquo;implicit function&rdquo; that can convert of a value of one type to another. This can be overused badly, unfortunately.</p>

<p>Another is to define an &ldquo;implicit parameter&rdquo; for a function so that you don&rsquo;t have to explicitly pass a parameter to the function, if there is an implicit value in scope.</p>

<p>Scala 2.10 greatly improved implicits by encapsulating the &ldquo;conversion&rdquo; pattern by means of an &ldquo;implicit class&rdquo;. Strangely, Scala Worksheet seemed to get confused when we played around and defined an implicit class that also had an implicit parameter. This led to some interesting detective work as we examined the generated JVM byte code to figure out what was going on! I thought it was useful for us to dig into this level; often it is useful to understand what something compiles to in order to better understand and appreciate a high-level language construct.</p>

<p>Finally, we briefly discussed the type class pattern, which is arguably the most important use of implicits. This was too big a topic to get into here though.</p>

<h2>Resources</h2>

<p>I posted some good resources that have popped up on my radar on Scala implicits:</p>

<ul>
<li>A fine <a href="http://like-a-boss.net/2013/03/29/polymorphism-and-typeclasses-in-scala.html">tutorial on type classes in Scala</a>.</li>
<li><a href="http://typelevel.org/blog/2014/01/18/implicitly_existential.html">Scary stuff with implicits</a> that I don&rsquo;t understand (yet).</li>
</ul>


<h2>Conclusion</h2>

<p>Justin gave a nice introduction to implicits. I think the live coding and experimentation is a great way to involve people in code suggestions and discussion of what things mean and do. It was a fun time.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pittsburgh Scala Meetup: Introduction to Reactive]]></title>
    <link href="http://ConscientiousProgrammer.com/blog/2014/01/09/pittsburgh-scala-meetup-introduction-to-reactive/"/>
    <updated>2014-01-09T21:29:20-05:00</updated>
    <id>http://ConscientiousProgrammer.com/blog/2014/01/09/pittsburgh-scala-meetup-introduction-to-reactive</id>
    <content type="html"><![CDATA[<p>The <a href="http://www.meetup.com/Pittsburgh-Scala-Meetup/">Pittsburgh Scala Meetup</a> met with Josh presenting an <a href="http://www.meetup.com/Pittsburgh-Scala-Meetup/events/146581352/">&ldquo;Introduction to Reactive&rdquo;</a>.</p>

<p>It was great.</p>

<!--more-->


<h2>Pre-meetup dinner</h2>

<p>A couple of us (Justin, Josh, Chris, me) had an early dinner at Everyday Noodles before the meetup. Very filling!</p>

<h2>Turnout</h2>

<p>Ten of us showed up for this meeting.</p>

<h2>Presentation</h2>

<h3>What is &ldquo;reactive&rdquo; anyway?</h3>

<p>In case you didn&rsquo;t hear about it in the media, the term &ldquo;reactive&rdquo; has been popularized in recent months, and I <a href="/blog/2013/12/31/review-of-the-free-coursera-course-principles-of-reactive-programming/">reviewed the free Coursera course &ldquo;Principles of Reactive Programming&rdquo;</a> that some of us in the Pittsburgh Scala group just completed, so check out my post for more on &ldquo;reactive&rdquo;.</p>

<h3>Futures</h3>

<p>Josh did a live SBT session reviewing futures and promises.</p>

<p>He noted that futures have limitations as a component of reactive systems. (This had become apparent when <a href="http://franklinchen.com/blog/2013/03/25/openhack-pittsburgh-exploring-scala-odds-and-ends/">I started using futures last year in my personal projects</a> and then <a href="/blog/2013/08/02/pittsburgh-ruby-python-social/">for work</a>.) By themselves, futures do not support cancellation or <a href="http://en.wikipedia.org/wiki/Back_pressure">back pressure</a>. Futures are a low-level, limited mechanism that are the right tool only if you have a pipeline all the way through forward, no back channel.</p>

<p>An alternative to futures, of course, is to go all out and use Akka actors. But the drawback I&rsquo;ve found with that is that this is a heavyweight mechanism for problems that don&rsquo;t need the full power of actors. I&rsquo;ve wanted something more structured and lightweight than using actors directly. I find it tricky to program using actors, because it is very easy to start writing spaghetti code that is spread out everywhere (which is what happened to me in the final project for the Coursera course).</p>

<p>It turns out, according to Josh, that Typesafe is working on precisely this problem! Nice. He&rsquo;ll tell us more when it comes out.</p>

<h4>(Update of 2014-07-10)</h4>

<p>Half a year later, the promise was realized, as the Pittsburgh Scala Meetup had Josh <a href="/blog/2014/07/10/pittsburgh-scala-meetup-reactive-streams/">gave a talk on the new API called Reactive Streams</a>!</p>

<h3>Play</h3>

<p>Josh demonstrated <a href="http://typesafe.com/activator">Typesafe Activator</a>, the cool new Web browser-based platform for using Scala. He showed an app using Play that looks at blogs simultaneously and uses <code>recoverWith</code>.</p>

<h2>Random other questions and discussions</h2>

<p>What I like about the Pittsburgh Scala Meetup is that even when we have a presentation, discussion often wanders off to related topics (or unrelated topics). Anything goes, and I usually learn a lot.</p>

<p>Someone asked about support for channels as in Go or Clojure&rsquo;s <a href="https://github.com/clojure/core.async"><code>core.async</code></a>. Josh said they&rsquo;re working on this sort of thing with support for back pressure.</p>

<p>Someone asked about how to connect <a href="http://www.playframework.com/documentation/2.0/Iteratees">iteratees</a> with actors. Josh said, you can feed from an iteratee to an actor, and then just let the actor do stuff. However, there is some controversy about the whole iteratee thing in Play.</p>

<h2>Conclusion</h2>

<p>This was a great Pittsburgh Scala Meetup session. I felt that a lot of questions that had built up in my mind after having gotten into reactive programming are being addressed with continuing work.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pittsburgh Scala Meetup: code walk through tic-tac-toe with Play]]></title>
    <link href="http://ConscientiousProgrammer.com/blog/2013/12/05/pittsburgh-scala-meetup-code-walk-through-tic-tac-toe-with-play/"/>
    <updated>2013-12-05T22:15:52-05:00</updated>
    <id>http://ConscientiousProgrammer.com/blog/2013/12/05/pittsburgh-scala-meetup-code-walk-through-tic-tac-toe-with-play</id>
    <content type="html"><![CDATA[<p>The <a href="http://www.meetup.com/Pittsburgh-Scala-Meetup/">Pittsburgh Scala Meetup</a> met again with <a href="http://www.meetup.com/Pittsburgh-Scala-Meetup/events/146581232/">Josh walking through his code for an interactive Web tic-tac-toe program implemented with Play</a>.</p>

<p>It was a good session. I&rsquo;m finding that studying code (with the code&rsquo;s author present) is a great way to learn, to discuss design decisions and alternate possible choices that could have been made. For example, when it comes to actors, there are decisions to be made about how many actors, what state they should contain, and how to transition.</p>
]]></content>
  </entry>
  
</feed>
